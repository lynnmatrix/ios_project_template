// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Silmaril.pb.h"

@implementation SilmarilRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SilmarilRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL UpdateStatusIsValidValue(UpdateStatus value) {
  switch (value) {
    case UpdateStatusInvalid:
    case UpdateStatusLatest:
    case UpdateStatusOutdated:
    case UpdateStatusDiscard:
      return YES;
    default:
      return NO;
  }
}
BOOL TrafficModeIsValidValue(TrafficMode value) {
  switch (value) {
    case TrafficModeInvalidMode:
    case TrafficModeWalk:
    case TrafficModeBus:
    case TrafficModeDrive:
    case TrafficModeTrain:
    case TrafficModeFly:
      return YES;
    default:
      return NO;
  }
}
@interface PersonalizeParams ()
@end

@implementation PersonalizeParams

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PersonalizeParams* defaultPersonalizeParamsInstance = nil;
+ (void) initialize {
  if (self == [PersonalizeParams class]) {
    defaultPersonalizeParamsInstance = [[PersonalizeParams alloc] init];
  }
}
+ (PersonalizeParams*) defaultInstance {
  return defaultPersonalizeParamsInstance;
}
- (PersonalizeParams*) defaultInstance {
  return defaultPersonalizeParamsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PersonalizeParams*) parseFromData:(NSData*) data {
  return (PersonalizeParams*)[[[PersonalizeParams builder] mergeFromData:data] build];
}
+ (PersonalizeParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersonalizeParams*)[[[PersonalizeParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PersonalizeParams*) parseFromInputStream:(NSInputStream*) input {
  return (PersonalizeParams*)[[[PersonalizeParams builder] mergeFromInputStream:input] build];
}
+ (PersonalizeParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersonalizeParams*)[[[PersonalizeParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersonalizeParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PersonalizeParams*)[[[PersonalizeParams builder] mergeFromCodedInputStream:input] build];
}
+ (PersonalizeParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersonalizeParams*)[[[PersonalizeParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersonalizeParams_Builder*) builder {
  return [[[PersonalizeParams_Builder alloc] init] autorelease];
}
+ (PersonalizeParams_Builder*) builderWithPrototype:(PersonalizeParams*) prototype {
  return [[PersonalizeParams builder] mergeFrom:prototype];
}
- (PersonalizeParams_Builder*) builder {
  return [PersonalizeParams builder];
}
@end

BOOL PersonalizeParams_TypeIsValidValue(PersonalizeParams_Type value) {
  switch (value) {
    case PersonalizeParams_TypeInvalid:
    case PersonalizeParams_TypeAll:
    case PersonalizeParams_TypeNearby:
    case PersonalizeParams_TypeHome:
    case PersonalizeParams_TypeCity:
    case PersonalizeParams_TypeAreas:
      return YES;
    default:
      return NO;
  }
}
@interface PersonalizeParams_Builder()
@property (retain) PersonalizeParams* result;
@end

@implementation PersonalizeParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PersonalizeParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PersonalizeParams_Builder*) clear {
  self.result = [[[PersonalizeParams alloc] init] autorelease];
  return self;
}
- (PersonalizeParams_Builder*) clone {
  return [PersonalizeParams builderWithPrototype:result];
}
- (PersonalizeParams*) defaultInstance {
  return [PersonalizeParams defaultInstance];
}
- (PersonalizeParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PersonalizeParams*) buildPartial {
  PersonalizeParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PersonalizeParams_Builder*) mergeFrom:(PersonalizeParams*) other {
  if (other == [PersonalizeParams defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PersonalizeParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PersonalizeParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface RecommendParams ()
@end

@implementation RecommendParams

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static RecommendParams* defaultRecommendParamsInstance = nil;
+ (void) initialize {
  if (self == [RecommendParams class]) {
    defaultRecommendParamsInstance = [[RecommendParams alloc] init];
  }
}
+ (RecommendParams*) defaultInstance {
  return defaultRecommendParamsInstance;
}
- (RecommendParams*) defaultInstance {
  return defaultRecommendParamsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecommendParams*) parseFromData:(NSData*) data {
  return (RecommendParams*)[[[RecommendParams builder] mergeFromData:data] build];
}
+ (RecommendParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecommendParams*)[[[RecommendParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecommendParams*) parseFromInputStream:(NSInputStream*) input {
  return (RecommendParams*)[[[RecommendParams builder] mergeFromInputStream:input] build];
}
+ (RecommendParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecommendParams*)[[[RecommendParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecommendParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecommendParams*)[[[RecommendParams builder] mergeFromCodedInputStream:input] build];
}
+ (RecommendParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecommendParams*)[[[RecommendParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecommendParams_Builder*) builder {
  return [[[RecommendParams_Builder alloc] init] autorelease];
}
+ (RecommendParams_Builder*) builderWithPrototype:(RecommendParams*) prototype {
  return [[RecommendParams builder] mergeFrom:prototype];
}
- (RecommendParams_Builder*) builder {
  return [RecommendParams builder];
}
@end

BOOL RecommendParams_TypeIsValidValue(RecommendParams_Type value) {
  switch (value) {
    case RecommendParams_TypeInvalid:
    case RecommendParams_TypeNormal:
    case RecommendParams_TypeCity:
    case RecommendParams_TypeEditor:
    case RecommendParams_TypeSearch:
      return YES;
    default:
      return NO;
  }
}
BOOL RecommendParams_ReasonTypeIsValidValue(RecommendParams_ReasonType value) {
  switch (value) {
    case RecommendParams_ReasonTypeSimilar:
    case RecommendParams_ReasonTypeChain:
    case RecommendParams_ReasonTypeChainSimilar:
    case RecommendParams_ReasonTypeRegionBoardNear:
    case RecommendParams_ReasonTypeRegionBoardArea:
    case RecommendParams_ReasonTypeRegionBoardCity:
    case RecommendParams_ReasonTypeArtiBoard:
    case RecommendParams_ReasonTypeHome:
    case RecommendParams_ReasonTypeCube:
    case RecommendParams_ReasonTypeWeibo:
    case RecommendParams_ReasonTypeEditorRec:
    case RecommendParams_ReasonTypeSdish:
    case RecommendParams_ReasonTypeRandom:
    case RecommendParams_ReasonTypeJingxuan:
    case RecommendParams_ReasonTypeSimilarDish:
    case RecommendParams_ReasonTypeFavorCurrentDish:
    case RecommendParams_ReasonTypeFavorGlobalDish:
    case RecommendParams_ReasonTypeSoloDish:
    case RecommendParams_ReasonTypeBaseDish:
    case RecommendParams_ReasonTypeDislikeDish:
      return YES;
    default:
      return NO;
  }
}
@interface RecommendParams_Builder()
@property (retain) RecommendParams* result;
@end

@implementation RecommendParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecommendParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecommendParams_Builder*) clear {
  self.result = [[[RecommendParams alloc] init] autorelease];
  return self;
}
- (RecommendParams_Builder*) clone {
  return [RecommendParams builderWithPrototype:result];
}
- (RecommendParams*) defaultInstance {
  return [RecommendParams defaultInstance];
}
- (RecommendParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecommendParams*) buildPartial {
  RecommendParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecommendParams_Builder*) mergeFrom:(RecommendParams*) other {
  if (other == [RecommendParams defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecommendParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecommendParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface ErrorReportParams ()
@end

@implementation ErrorReportParams

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static ErrorReportParams* defaultErrorReportParamsInstance = nil;
+ (void) initialize {
  if (self == [ErrorReportParams class]) {
    defaultErrorReportParamsInstance = [[ErrorReportParams alloc] init];
  }
}
+ (ErrorReportParams*) defaultInstance {
  return defaultErrorReportParamsInstance;
}
- (ErrorReportParams*) defaultInstance {
  return defaultErrorReportParamsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ErrorReportParams*) parseFromData:(NSData*) data {
  return (ErrorReportParams*)[[[ErrorReportParams builder] mergeFromData:data] build];
}
+ (ErrorReportParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ErrorReportParams*)[[[ErrorReportParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ErrorReportParams*) parseFromInputStream:(NSInputStream*) input {
  return (ErrorReportParams*)[[[ErrorReportParams builder] mergeFromInputStream:input] build];
}
+ (ErrorReportParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ErrorReportParams*)[[[ErrorReportParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ErrorReportParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ErrorReportParams*)[[[ErrorReportParams builder] mergeFromCodedInputStream:input] build];
}
+ (ErrorReportParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ErrorReportParams*)[[[ErrorReportParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ErrorReportParams_Builder*) builder {
  return [[[ErrorReportParams_Builder alloc] init] autorelease];
}
+ (ErrorReportParams_Builder*) builderWithPrototype:(ErrorReportParams*) prototype {
  return [[ErrorReportParams builder] mergeFrom:prototype];
}
- (ErrorReportParams_Builder*) builder {
  return [ErrorReportParams builder];
}
@end

BOOL ErrorReportParams_TypeIsValidValue(ErrorReportParams_Type value) {
  switch (value) {
    case ErrorReportParams_TypeInvalid:
    case ErrorReportParams_TypeRestNotExsist:
    case ErrorReportParams_TypeRestStyleError:
    case ErrorReportParams_TypeRestAddressError:
    case ErrorReportParams_TypeRestTelError:
    case ErrorReportParams_TypeRestClosed:
    case ErrorReportParams_TypeRestOtherError:
    case ErrorReportParams_TypeDishNotExsist:
    case ErrorReportParams_TypeDishAtError:
    case ErrorReportParams_TypeDishOtherError:
      return YES;
    default:
      return NO;
  }
}
@interface ErrorReportParams_Builder()
@property (retain) ErrorReportParams* result;
@end

@implementation ErrorReportParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ErrorReportParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ErrorReportParams_Builder*) clear {
  self.result = [[[ErrorReportParams alloc] init] autorelease];
  return self;
}
- (ErrorReportParams_Builder*) clone {
  return [ErrorReportParams builderWithPrototype:result];
}
- (ErrorReportParams*) defaultInstance {
  return [ErrorReportParams defaultInstance];
}
- (ErrorReportParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ErrorReportParams*) buildPartial {
  ErrorReportParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ErrorReportParams_Builder*) mergeFrom:(ErrorReportParams*) other {
  if (other == [ErrorReportParams defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ErrorReportParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ErrorReportParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface SuggestParams ()
@end

@implementation SuggestParams

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static SuggestParams* defaultSuggestParamsInstance = nil;
+ (void) initialize {
  if (self == [SuggestParams class]) {
    defaultSuggestParamsInstance = [[SuggestParams alloc] init];
  }
}
+ (SuggestParams*) defaultInstance {
  return defaultSuggestParamsInstance;
}
- (SuggestParams*) defaultInstance {
  return defaultSuggestParamsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SuggestParams*) parseFromData:(NSData*) data {
  return (SuggestParams*)[[[SuggestParams builder] mergeFromData:data] build];
}
+ (SuggestParams*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SuggestParams*)[[[SuggestParams builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SuggestParams*) parseFromInputStream:(NSInputStream*) input {
  return (SuggestParams*)[[[SuggestParams builder] mergeFromInputStream:input] build];
}
+ (SuggestParams*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SuggestParams*)[[[SuggestParams builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SuggestParams*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SuggestParams*)[[[SuggestParams builder] mergeFromCodedInputStream:input] build];
}
+ (SuggestParams*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SuggestParams*)[[[SuggestParams builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SuggestParams_Builder*) builder {
  return [[[SuggestParams_Builder alloc] init] autorelease];
}
+ (SuggestParams_Builder*) builderWithPrototype:(SuggestParams*) prototype {
  return [[SuggestParams builder] mergeFrom:prototype];
}
- (SuggestParams_Builder*) builder {
  return [SuggestParams builder];
}
@end

BOOL SuggestParams_TypeIsValidValue(SuggestParams_Type value) {
  switch (value) {
    case SuggestParams_TypeInvalid:
    case SuggestParams_TypeRestaurant:
    case SuggestParams_TypeDish:
      return YES;
    default:
      return NO;
  }
}
@interface SuggestParams_Builder()
@property (retain) SuggestParams* result;
@end

@implementation SuggestParams_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SuggestParams alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SuggestParams_Builder*) clear {
  self.result = [[[SuggestParams alloc] init] autorelease];
  return self;
}
- (SuggestParams_Builder*) clone {
  return [SuggestParams builderWithPrototype:result];
}
- (SuggestParams*) defaultInstance {
  return [SuggestParams defaultInstance];
}
- (SuggestParams*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SuggestParams*) buildPartial {
  SuggestParams* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SuggestParams_Builder*) mergeFrom:(SuggestParams*) other {
  if (other == [SuggestParams defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SuggestParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SuggestParams_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface MsgUpdateInfo ()
@property UpdateStatus status;
@property (retain) NSString* os;
@property (retain) NSString* latestversion;
@property (retain) NSString* downloadurl;
@end

@implementation MsgUpdateInfo

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasOs {
  return !!hasOs_;
}
- (void) setHasOs:(BOOL) value {
  hasOs_ = !!value;
}
@synthesize os;
- (BOOL) hasLatestversion {
  return !!hasLatestversion_;
}
- (void) setHasLatestversion:(BOOL) value {
  hasLatestversion_ = !!value;
}
@synthesize latestversion;
- (BOOL) hasDownloadurl {
  return !!hasDownloadurl_;
}
- (void) setHasDownloadurl:(BOOL) value {
  hasDownloadurl_ = !!value;
}
@synthesize downloadurl;
- (void) dealloc {
  self.os = nil;
  self.latestversion = nil;
  self.downloadurl = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.status = UpdateStatusInvalid;
    self.os = @"";
    self.latestversion = @"";
    self.downloadurl = @"";
  }
  return self;
}
static MsgUpdateInfo* defaultMsgUpdateInfoInstance = nil;
+ (void) initialize {
  if (self == [MsgUpdateInfo class]) {
    defaultMsgUpdateInfoInstance = [[MsgUpdateInfo alloc] init];
  }
}
+ (MsgUpdateInfo*) defaultInstance {
  return defaultMsgUpdateInfoInstance;
}
- (MsgUpdateInfo*) defaultInstance {
  return defaultMsgUpdateInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeEnum:1 value:self.status];
  }
  if (self.hasOs) {
    [output writeString:2 value:self.os];
  }
  if (self.hasLatestversion) {
    [output writeString:3 value:self.latestversion];
  }
  if (self.hasDownloadurl) {
    [output writeString:4 value:self.downloadurl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStatus) {
    size += computeEnumSize(1, self.status);
  }
  if (self.hasOs) {
    size += computeStringSize(2, self.os);
  }
  if (self.hasLatestversion) {
    size += computeStringSize(3, self.latestversion);
  }
  if (self.hasDownloadurl) {
    size += computeStringSize(4, self.downloadurl);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgUpdateInfo*) parseFromData:(NSData*) data {
  return (MsgUpdateInfo*)[[[MsgUpdateInfo builder] mergeFromData:data] build];
}
+ (MsgUpdateInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgUpdateInfo*)[[[MsgUpdateInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgUpdateInfo*) parseFromInputStream:(NSInputStream*) input {
  return (MsgUpdateInfo*)[[[MsgUpdateInfo builder] mergeFromInputStream:input] build];
}
+ (MsgUpdateInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgUpdateInfo*)[[[MsgUpdateInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgUpdateInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgUpdateInfo*)[[[MsgUpdateInfo builder] mergeFromCodedInputStream:input] build];
}
+ (MsgUpdateInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgUpdateInfo*)[[[MsgUpdateInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgUpdateInfo_Builder*) builder {
  return [[[MsgUpdateInfo_Builder alloc] init] autorelease];
}
+ (MsgUpdateInfo_Builder*) builderWithPrototype:(MsgUpdateInfo*) prototype {
  return [[MsgUpdateInfo builder] mergeFrom:prototype];
}
- (MsgUpdateInfo_Builder*) builder {
  return [MsgUpdateInfo builder];
}
@end

@interface MsgUpdateInfo_Builder()
@property (retain) MsgUpdateInfo* result;
@end

@implementation MsgUpdateInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgUpdateInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgUpdateInfo_Builder*) clear {
  self.result = [[[MsgUpdateInfo alloc] init] autorelease];
  return self;
}
- (MsgUpdateInfo_Builder*) clone {
  return [MsgUpdateInfo builderWithPrototype:result];
}
- (MsgUpdateInfo*) defaultInstance {
  return [MsgUpdateInfo defaultInstance];
}
- (MsgUpdateInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgUpdateInfo*) buildPartial {
  MsgUpdateInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgUpdateInfo_Builder*) mergeFrom:(MsgUpdateInfo*) other {
  if (other == [MsgUpdateInfo defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasOs) {
    [self setOs:other.os];
  }
  if (other.hasLatestversion) {
    [self setLatestversion:other.latestversion];
  }
  if (other.hasDownloadurl) {
    [self setDownloadurl:other.downloadurl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgUpdateInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgUpdateInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (UpdateStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setOs:[input readString]];
        break;
      }
      case 26: {
        [self setLatestversion:[input readString]];
        break;
      }
      case 34: {
        [self setDownloadurl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UpdateStatus) status {
  return result.status;
}
- (MsgUpdateInfo_Builder*) setStatus:(UpdateStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (MsgUpdateInfo_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = UpdateStatusInvalid;
  return self;
}
- (BOOL) hasOs {
  return result.hasOs;
}
- (NSString*) os {
  return result.os;
}
- (MsgUpdateInfo_Builder*) setOs:(NSString*) value {
  result.hasOs = YES;
  result.os = value;
  return self;
}
- (MsgUpdateInfo_Builder*) clearOs {
  result.hasOs = NO;
  result.os = @"";
  return self;
}
- (BOOL) hasLatestversion {
  return result.hasLatestversion;
}
- (NSString*) latestversion {
  return result.latestversion;
}
- (MsgUpdateInfo_Builder*) setLatestversion:(NSString*) value {
  result.hasLatestversion = YES;
  result.latestversion = value;
  return self;
}
- (MsgUpdateInfo_Builder*) clearLatestversion {
  result.hasLatestversion = NO;
  result.latestversion = @"";
  return self;
}
- (BOOL) hasDownloadurl {
  return result.hasDownloadurl;
}
- (NSString*) downloadurl {
  return result.downloadurl;
}
- (MsgUpdateInfo_Builder*) setDownloadurl:(NSString*) value {
  result.hasDownloadurl = YES;
  result.downloadurl = value;
  return self;
}
- (MsgUpdateInfo_Builder*) clearDownloadurl {
  result.hasDownloadurl = NO;
  result.downloadurl = @"";
  return self;
}
@end

@interface MsgApiStatus ()
@property int32_t code;
@property (retain) NSString* message;
@property int32_t execTime;
@property (retain) NSString* debugInfo;
@end

@implementation MsgApiStatus

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) value {
  hasCode_ = !!value;
}
@synthesize code;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value {
  hasMessage_ = !!value;
}
@synthesize message;
- (BOOL) hasExecTime {
  return !!hasExecTime_;
}
- (void) setHasExecTime:(BOOL) value {
  hasExecTime_ = !!value;
}
@synthesize execTime;
- (BOOL) hasDebugInfo {
  return !!hasDebugInfo_;
}
- (void) setHasDebugInfo:(BOOL) value {
  hasDebugInfo_ = !!value;
}
@synthesize debugInfo;
- (void) dealloc {
  self.message = nil;
  self.debugInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.code = 0;
    self.message = @"";
    self.execTime = 0;
    self.debugInfo = @"";
  }
  return self;
}
static MsgApiStatus* defaultMsgApiStatusInstance = nil;
+ (void) initialize {
  if (self == [MsgApiStatus class]) {
    defaultMsgApiStatusInstance = [[MsgApiStatus alloc] init];
  }
}
+ (MsgApiStatus*) defaultInstance {
  return defaultMsgApiStatusInstance;
}
- (MsgApiStatus*) defaultInstance {
  return defaultMsgApiStatusInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeInt32:1 value:self.code];
  }
  if (self.hasMessage) {
    [output writeString:2 value:self.message];
  }
  if (self.hasExecTime) {
    [output writeInt32:3 value:self.execTime];
  }
  if (self.hasDebugInfo) {
    [output writeString:4 value:self.debugInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCode) {
    size += computeInt32Size(1, self.code);
  }
  if (self.hasMessage) {
    size += computeStringSize(2, self.message);
  }
  if (self.hasExecTime) {
    size += computeInt32Size(3, self.execTime);
  }
  if (self.hasDebugInfo) {
    size += computeStringSize(4, self.debugInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgApiStatus*) parseFromData:(NSData*) data {
  return (MsgApiStatus*)[[[MsgApiStatus builder] mergeFromData:data] build];
}
+ (MsgApiStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgApiStatus*)[[[MsgApiStatus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgApiStatus*) parseFromInputStream:(NSInputStream*) input {
  return (MsgApiStatus*)[[[MsgApiStatus builder] mergeFromInputStream:input] build];
}
+ (MsgApiStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgApiStatus*)[[[MsgApiStatus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgApiStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgApiStatus*)[[[MsgApiStatus builder] mergeFromCodedInputStream:input] build];
}
+ (MsgApiStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgApiStatus*)[[[MsgApiStatus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgApiStatus_Builder*) builder {
  return [[[MsgApiStatus_Builder alloc] init] autorelease];
}
+ (MsgApiStatus_Builder*) builderWithPrototype:(MsgApiStatus*) prototype {
  return [[MsgApiStatus builder] mergeFrom:prototype];
}
- (MsgApiStatus_Builder*) builder {
  return [MsgApiStatus builder];
}
@end

@interface MsgApiStatus_Builder()
@property (retain) MsgApiStatus* result;
@end

@implementation MsgApiStatus_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgApiStatus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgApiStatus_Builder*) clear {
  self.result = [[[MsgApiStatus alloc] init] autorelease];
  return self;
}
- (MsgApiStatus_Builder*) clone {
  return [MsgApiStatus builderWithPrototype:result];
}
- (MsgApiStatus*) defaultInstance {
  return [MsgApiStatus defaultInstance];
}
- (MsgApiStatus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgApiStatus*) buildPartial {
  MsgApiStatus* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgApiStatus_Builder*) mergeFrom:(MsgApiStatus*) other {
  if (other == [MsgApiStatus defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  if (other.hasExecTime) {
    [self setExecTime:other.execTime];
  }
  if (other.hasDebugInfo) {
    [self setDebugInfo:other.debugInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgApiStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgApiStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setMessage:[input readString]];
        break;
      }
      case 24: {
        [self setExecTime:[input readInt32]];
        break;
      }
      case 34: {
        [self setDebugInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return result.hasCode;
}
- (int32_t) code {
  return result.code;
}
- (MsgApiStatus_Builder*) setCode:(int32_t) value {
  result.hasCode = YES;
  result.code = value;
  return self;
}
- (MsgApiStatus_Builder*) clearCode {
  result.hasCode = NO;
  result.code = 0;
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (MsgApiStatus_Builder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (MsgApiStatus_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
- (BOOL) hasExecTime {
  return result.hasExecTime;
}
- (int32_t) execTime {
  return result.execTime;
}
- (MsgApiStatus_Builder*) setExecTime:(int32_t) value {
  result.hasExecTime = YES;
  result.execTime = value;
  return self;
}
- (MsgApiStatus_Builder*) clearExecTime {
  result.hasExecTime = NO;
  result.execTime = 0;
  return self;
}
- (BOOL) hasDebugInfo {
  return result.hasDebugInfo;
}
- (NSString*) debugInfo {
  return result.debugInfo;
}
- (MsgApiStatus_Builder*) setDebugInfo:(NSString*) value {
  result.hasDebugInfo = YES;
  result.debugInfo = value;
  return self;
}
- (MsgApiStatus_Builder*) clearDebugInfo {
  result.hasDebugInfo = NO;
  result.debugInfo = @"";
  return self;
}
@end

@interface MsgSuggestions ()
@property (retain) PBAppendableArray * suggestionsArray;
@end

@implementation MsgSuggestions

@synthesize suggestionsArray;
@dynamic suggestions;
- (void) dealloc {
  self.suggestionsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgSuggestions* defaultMsgSuggestionsInstance = nil;
+ (void) initialize {
  if (self == [MsgSuggestions class]) {
    defaultMsgSuggestionsInstance = [[MsgSuggestions alloc] init];
  }
}
+ (MsgSuggestions*) defaultInstance {
  return defaultMsgSuggestionsInstance;
}
- (MsgSuggestions*) defaultInstance {
  return defaultMsgSuggestionsInstance;
}
- (PBArray *)suggestions {
  return suggestionsArray;
}
- (MsgSuggestion*)suggestionsAtIndex:(NSUInteger)index {
  return [suggestionsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (MsgSuggestion* element in self.suggestions) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MsgSuggestion *element in self.suggestionsArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MsgSuggestion *element in self.suggestionsArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgSuggestions*) parseFromData:(NSData*) data {
  return (MsgSuggestions*)[[[MsgSuggestions builder] mergeFromData:data] build];
}
+ (MsgSuggestions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSuggestions*)[[[MsgSuggestions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgSuggestions*) parseFromInputStream:(NSInputStream*) input {
  return (MsgSuggestions*)[[[MsgSuggestions builder] mergeFromInputStream:input] build];
}
+ (MsgSuggestions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSuggestions*)[[[MsgSuggestions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgSuggestions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgSuggestions*)[[[MsgSuggestions builder] mergeFromCodedInputStream:input] build];
}
+ (MsgSuggestions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSuggestions*)[[[MsgSuggestions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgSuggestions_Builder*) builder {
  return [[[MsgSuggestions_Builder alloc] init] autorelease];
}
+ (MsgSuggestions_Builder*) builderWithPrototype:(MsgSuggestions*) prototype {
  return [[MsgSuggestions builder] mergeFrom:prototype];
}
- (MsgSuggestions_Builder*) builder {
  return [MsgSuggestions builder];
}
@end

@interface MsgSuggestions_Builder()
@property (retain) MsgSuggestions* result;
@end

@implementation MsgSuggestions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgSuggestions alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgSuggestions_Builder*) clear {
  self.result = [[[MsgSuggestions alloc] init] autorelease];
  return self;
}
- (MsgSuggestions_Builder*) clone {
  return [MsgSuggestions builderWithPrototype:result];
}
- (MsgSuggestions*) defaultInstance {
  return [MsgSuggestions defaultInstance];
}
- (MsgSuggestions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgSuggestions*) buildPartial {
  MsgSuggestions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgSuggestions_Builder*) mergeFrom:(MsgSuggestions*) other {
  if (other == [MsgSuggestions defaultInstance]) {
    return self;
  }
  if (other.suggestionsArray.count > 0) {
    if (result.suggestionsArray == nil) {
      result.suggestionsArray = [[other.suggestionsArray copyWithZone:[other.suggestionsArray zone]] autorelease];
    } else {
      [result.suggestionsArray appendArray:other.suggestionsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgSuggestions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgSuggestions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgSuggestion_Builder* subBuilder = [MsgSuggestion builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSuggestions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)suggestions {
  return result.suggestionsArray;
}
- (MsgSuggestion*)suggestionsAtIndex:(NSUInteger)index {
  return [result suggestionsAtIndex:index];
}
- (MsgSuggestions_Builder *)addSuggestions:(MsgSuggestion*)value {
  if (result.suggestionsArray == nil) {
    result.suggestionsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.suggestionsArray addObject:value];
  return self;
}
- (MsgSuggestions_Builder *)setSuggestionsArray:(NSArray *)array {
  result.suggestionsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgSuggestions_Builder *)setSuggestionsValues:(const MsgSuggestion* *)values count:(NSUInteger)count {
  result.suggestionsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgSuggestions_Builder *)clearSuggestions {
  result.suggestionsArray = nil;
  return self;
}
@end

@interface MsgSuggestion ()
@property (retain) NSString* content;
@end

@implementation MsgSuggestion

- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (void) dealloc {
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.content = @"";
  }
  return self;
}
static MsgSuggestion* defaultMsgSuggestionInstance = nil;
+ (void) initialize {
  if (self == [MsgSuggestion class]) {
    defaultMsgSuggestionInstance = [[MsgSuggestion alloc] init];
  }
}
+ (MsgSuggestion*) defaultInstance {
  return defaultMsgSuggestionInstance;
}
- (MsgSuggestion*) defaultInstance {
  return defaultMsgSuggestionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContent) {
    [output writeString:1 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasContent) {
    size += computeStringSize(1, self.content);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgSuggestion*) parseFromData:(NSData*) data {
  return (MsgSuggestion*)[[[MsgSuggestion builder] mergeFromData:data] build];
}
+ (MsgSuggestion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSuggestion*)[[[MsgSuggestion builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgSuggestion*) parseFromInputStream:(NSInputStream*) input {
  return (MsgSuggestion*)[[[MsgSuggestion builder] mergeFromInputStream:input] build];
}
+ (MsgSuggestion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSuggestion*)[[[MsgSuggestion builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgSuggestion*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgSuggestion*)[[[MsgSuggestion builder] mergeFromCodedInputStream:input] build];
}
+ (MsgSuggestion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSuggestion*)[[[MsgSuggestion builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgSuggestion_Builder*) builder {
  return [[[MsgSuggestion_Builder alloc] init] autorelease];
}
+ (MsgSuggestion_Builder*) builderWithPrototype:(MsgSuggestion*) prototype {
  return [[MsgSuggestion builder] mergeFrom:prototype];
}
- (MsgSuggestion_Builder*) builder {
  return [MsgSuggestion builder];
}
@end

@interface MsgSuggestion_Builder()
@property (retain) MsgSuggestion* result;
@end

@implementation MsgSuggestion_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgSuggestion alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgSuggestion_Builder*) clear {
  self.result = [[[MsgSuggestion alloc] init] autorelease];
  return self;
}
- (MsgSuggestion_Builder*) clone {
  return [MsgSuggestion builderWithPrototype:result];
}
- (MsgSuggestion*) defaultInstance {
  return [MsgSuggestion defaultInstance];
}
- (MsgSuggestion*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgSuggestion*) buildPartial {
  MsgSuggestion* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgSuggestion_Builder*) mergeFrom:(MsgSuggestion*) other {
  if (other == [MsgSuggestion defaultInstance]) {
    return self;
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgSuggestion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgSuggestion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (MsgSuggestion_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (MsgSuggestion_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
@end

@interface MsgRestBrief ()
@property int64_t id;
@property (retain) NSString* name;
@property (retain) NSString* city;
@property (retain) NSString* style;
@property (retain) NSString* address;
@property Float32 avgPay;
@property Float64 longitude;
@property Float64 latitude;
@property Float32 srank;
@end

@implementation MsgRestBrief

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) value {
  hasCity_ = !!value;
}
@synthesize city;
- (BOOL) hasStyle {
  return !!hasStyle_;
}
- (void) setHasStyle:(BOOL) value {
  hasStyle_ = !!value;
}
@synthesize style;
- (BOOL) hasAddress {
  return !!hasAddress_;
}
- (void) setHasAddress:(BOOL) value {
  hasAddress_ = !!value;
}
@synthesize address;
- (BOOL) hasAvgPay {
  return !!hasAvgPay_;
}
- (void) setHasAvgPay:(BOOL) value {
  hasAvgPay_ = !!value;
}
@synthesize avgPay;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) value {
  hasLongitude_ = !!value;
}
@synthesize longitude;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) value {
  hasLatitude_ = !!value;
}
@synthesize latitude;
- (BOOL) hasSrank {
  return !!hasSrank_;
}
- (void) setHasSrank:(BOOL) value {
  hasSrank_ = !!value;
}
@synthesize srank;
- (void) dealloc {
  self.name = nil;
  self.city = nil;
  self.style = nil;
  self.address = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.city = @"";
    self.style = @"";
    self.address = @"";
    self.avgPay = 0;
    self.longitude = 0;
    self.latitude = 0;
    self.srank = 0;
  }
  return self;
}
static MsgRestBrief* defaultMsgRestBriefInstance = nil;
+ (void) initialize {
  if (self == [MsgRestBrief class]) {
    defaultMsgRestBriefInstance = [[MsgRestBrief alloc] init];
  }
}
+ (MsgRestBrief*) defaultInstance {
  return defaultMsgRestBriefInstance;
}
- (MsgRestBrief*) defaultInstance {
  return defaultMsgRestBriefInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasCity) {
    return NO;
  }
  if (!self.hasStyle) {
    return NO;
  }
  if (!self.hasAddress) {
    return NO;
  }
  if (!self.hasAvgPay) {
    return NO;
  }
  if (!self.hasLongitude) {
    return NO;
  }
  if (!self.hasLatitude) {
    return NO;
  }
  if (!self.hasSrank) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCity) {
    [output writeString:3 value:self.city];
  }
  if (self.hasStyle) {
    [output writeString:4 value:self.style];
  }
  if (self.hasAddress) {
    [output writeString:5 value:self.address];
  }
  if (self.hasAvgPay) {
    [output writeFloat:6 value:self.avgPay];
  }
  if (self.hasLongitude) {
    [output writeDouble:7 value:self.longitude];
  }
  if (self.hasLatitude) {
    [output writeDouble:8 value:self.latitude];
  }
  if (self.hasSrank) {
    [output writeFloat:9 value:self.srank];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasCity) {
    size += computeStringSize(3, self.city);
  }
  if (self.hasStyle) {
    size += computeStringSize(4, self.style);
  }
  if (self.hasAddress) {
    size += computeStringSize(5, self.address);
  }
  if (self.hasAvgPay) {
    size += computeFloatSize(6, self.avgPay);
  }
  if (self.hasLongitude) {
    size += computeDoubleSize(7, self.longitude);
  }
  if (self.hasLatitude) {
    size += computeDoubleSize(8, self.latitude);
  }
  if (self.hasSrank) {
    size += computeFloatSize(9, self.srank);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRestBrief*) parseFromData:(NSData*) data {
  return (MsgRestBrief*)[[[MsgRestBrief builder] mergeFromData:data] build];
}
+ (MsgRestBrief*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestBrief*)[[[MsgRestBrief builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRestBrief*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRestBrief*)[[[MsgRestBrief builder] mergeFromInputStream:input] build];
}
+ (MsgRestBrief*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestBrief*)[[[MsgRestBrief builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestBrief*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRestBrief*)[[[MsgRestBrief builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRestBrief*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestBrief*)[[[MsgRestBrief builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestBrief_Builder*) builder {
  return [[[MsgRestBrief_Builder alloc] init] autorelease];
}
+ (MsgRestBrief_Builder*) builderWithPrototype:(MsgRestBrief*) prototype {
  return [[MsgRestBrief builder] mergeFrom:prototype];
}
- (MsgRestBrief_Builder*) builder {
  return [MsgRestBrief builder];
}
@end

@interface MsgRestBrief_Builder()
@property (retain) MsgRestBrief* result;
@end

@implementation MsgRestBrief_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRestBrief alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRestBrief_Builder*) clear {
  self.result = [[[MsgRestBrief alloc] init] autorelease];
  return self;
}
- (MsgRestBrief_Builder*) clone {
  return [MsgRestBrief builderWithPrototype:result];
}
- (MsgRestBrief*) defaultInstance {
  return [MsgRestBrief defaultInstance];
}
- (MsgRestBrief*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRestBrief*) buildPartial {
  MsgRestBrief* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRestBrief_Builder*) mergeFrom:(MsgRestBrief*) other {
  if (other == [MsgRestBrief defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasStyle) {
    [self setStyle:other.style];
  }
  if (other.hasAddress) {
    [self setAddress:other.address];
  }
  if (other.hasAvgPay) {
    [self setAvgPay:other.avgPay];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasSrank) {
    [self setSrank:other.srank];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRestBrief_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRestBrief_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setCity:[input readString]];
        break;
      }
      case 34: {
        [self setStyle:[input readString]];
        break;
      }
      case 42: {
        [self setAddress:[input readString]];
        break;
      }
      case 53: {
        [self setAvgPay:[input readFloat]];
        break;
      }
      case 57: {
        [self setLongitude:[input readDouble]];
        break;
      }
      case 65: {
        [self setLatitude:[input readDouble]];
        break;
      }
      case 77: {
        [self setSrank:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int64_t) id {
  return result.id;
}
- (MsgRestBrief_Builder*) setId:(int64_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (MsgRestBrief_Builder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MsgRestBrief_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MsgRestBrief_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCity {
  return result.hasCity;
}
- (NSString*) city {
  return result.city;
}
- (MsgRestBrief_Builder*) setCity:(NSString*) value {
  result.hasCity = YES;
  result.city = value;
  return self;
}
- (MsgRestBrief_Builder*) clearCity {
  result.hasCity = NO;
  result.city = @"";
  return self;
}
- (BOOL) hasStyle {
  return result.hasStyle;
}
- (NSString*) style {
  return result.style;
}
- (MsgRestBrief_Builder*) setStyle:(NSString*) value {
  result.hasStyle = YES;
  result.style = value;
  return self;
}
- (MsgRestBrief_Builder*) clearStyle {
  result.hasStyle = NO;
  result.style = @"";
  return self;
}
- (BOOL) hasAddress {
  return result.hasAddress;
}
- (NSString*) address {
  return result.address;
}
- (MsgRestBrief_Builder*) setAddress:(NSString*) value {
  result.hasAddress = YES;
  result.address = value;
  return self;
}
- (MsgRestBrief_Builder*) clearAddress {
  result.hasAddress = NO;
  result.address = @"";
  return self;
}
- (BOOL) hasAvgPay {
  return result.hasAvgPay;
}
- (Float32) avgPay {
  return result.avgPay;
}
- (MsgRestBrief_Builder*) setAvgPay:(Float32) value {
  result.hasAvgPay = YES;
  result.avgPay = value;
  return self;
}
- (MsgRestBrief_Builder*) clearAvgPay {
  result.hasAvgPay = NO;
  result.avgPay = 0;
  return self;
}
- (BOOL) hasLongitude {
  return result.hasLongitude;
}
- (Float64) longitude {
  return result.longitude;
}
- (MsgRestBrief_Builder*) setLongitude:(Float64) value {
  result.hasLongitude = YES;
  result.longitude = value;
  return self;
}
- (MsgRestBrief_Builder*) clearLongitude {
  result.hasLongitude = NO;
  result.longitude = 0;
  return self;
}
- (BOOL) hasLatitude {
  return result.hasLatitude;
}
- (Float64) latitude {
  return result.latitude;
}
- (MsgRestBrief_Builder*) setLatitude:(Float64) value {
  result.hasLatitude = YES;
  result.latitude = value;
  return self;
}
- (MsgRestBrief_Builder*) clearLatitude {
  result.hasLatitude = NO;
  result.latitude = 0;
  return self;
}
- (BOOL) hasSrank {
  return result.hasSrank;
}
- (Float32) srank {
  return result.srank;
}
- (MsgRestBrief_Builder*) setSrank:(Float32) value {
  result.hasSrank = YES;
  result.srank = value;
  return self;
}
- (MsgRestBrief_Builder*) clearSrank {
  result.hasSrank = NO;
  result.srank = 0;
  return self;
}
@end

@interface MsgRestDetail ()
@property (retain) NSString* tel;
@property (retain) NSString* desc;
@property (retain) NSString* dishes;
@property (retain) NSString* special;
@property (retain) NSString* shophour;
@property (retain) NSString* traffic;
@property (retain) NSString* situation;
@property (retain) NSString* image;
@property (retain) MsgMoreDetails* moredetails;
@property (retain) NSString* imagecategory;
@end

@implementation MsgRestDetail

- (BOOL) hasTel {
  return !!hasTel_;
}
- (void) setHasTel:(BOOL) value {
  hasTel_ = !!value;
}
@synthesize tel;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasDishes {
  return !!hasDishes_;
}
- (void) setHasDishes:(BOOL) value {
  hasDishes_ = !!value;
}
@synthesize dishes;
- (BOOL) hasSpecial {
  return !!hasSpecial_;
}
- (void) setHasSpecial:(BOOL) value {
  hasSpecial_ = !!value;
}
@synthesize special;
- (BOOL) hasShophour {
  return !!hasShophour_;
}
- (void) setHasShophour:(BOOL) value {
  hasShophour_ = !!value;
}
@synthesize shophour;
- (BOOL) hasTraffic {
  return !!hasTraffic_;
}
- (void) setHasTraffic:(BOOL) value {
  hasTraffic_ = !!value;
}
@synthesize traffic;
- (BOOL) hasSituation {
  return !!hasSituation_;
}
- (void) setHasSituation:(BOOL) value {
  hasSituation_ = !!value;
}
@synthesize situation;
- (BOOL) hasImage {
  return !!hasImage_;
}
- (void) setHasImage:(BOOL) value {
  hasImage_ = !!value;
}
@synthesize image;
- (BOOL) hasMoredetails {
  return !!hasMoredetails_;
}
- (void) setHasMoredetails:(BOOL) value {
  hasMoredetails_ = !!value;
}
@synthesize moredetails;
- (BOOL) hasImagecategory {
  return !!hasImagecategory_;
}
- (void) setHasImagecategory:(BOOL) value {
  hasImagecategory_ = !!value;
}
@synthesize imagecategory;
- (void) dealloc {
  self.tel = nil;
  self.desc = nil;
  self.dishes = nil;
  self.special = nil;
  self.shophour = nil;
  self.traffic = nil;
  self.situation = nil;
  self.image = nil;
  self.moredetails = nil;
  self.imagecategory = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.tel = @"";
    self.desc = @"";
    self.dishes = @"";
    self.special = @"";
    self.shophour = @"";
    self.traffic = @"";
    self.situation = @"";
    self.image = @"";
    self.moredetails = [MsgMoreDetails defaultInstance];
    self.imagecategory = @"";
  }
  return self;
}
static MsgRestDetail* defaultMsgRestDetailInstance = nil;
+ (void) initialize {
  if (self == [MsgRestDetail class]) {
    defaultMsgRestDetailInstance = [[MsgRestDetail alloc] init];
  }
}
+ (MsgRestDetail*) defaultInstance {
  return defaultMsgRestDetailInstance;
}
- (MsgRestDetail*) defaultInstance {
  return defaultMsgRestDetailInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTel) {
    [output writeString:1 value:self.tel];
  }
  if (self.hasDesc) {
    [output writeString:2 value:self.desc];
  }
  if (self.hasDishes) {
    [output writeString:3 value:self.dishes];
  }
  if (self.hasSpecial) {
    [output writeString:4 value:self.special];
  }
  if (self.hasShophour) {
    [output writeString:5 value:self.shophour];
  }
  if (self.hasTraffic) {
    [output writeString:6 value:self.traffic];
  }
  if (self.hasSituation) {
    [output writeString:7 value:self.situation];
  }
  if (self.hasImage) {
    [output writeString:8 value:self.image];
  }
  if (self.hasMoredetails) {
    [output writeMessage:9 value:self.moredetails];
  }
  if (self.hasImagecategory) {
    [output writeString:10 value:self.imagecategory];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTel) {
    size += computeStringSize(1, self.tel);
  }
  if (self.hasDesc) {
    size += computeStringSize(2, self.desc);
  }
  if (self.hasDishes) {
    size += computeStringSize(3, self.dishes);
  }
  if (self.hasSpecial) {
    size += computeStringSize(4, self.special);
  }
  if (self.hasShophour) {
    size += computeStringSize(5, self.shophour);
  }
  if (self.hasTraffic) {
    size += computeStringSize(6, self.traffic);
  }
  if (self.hasSituation) {
    size += computeStringSize(7, self.situation);
  }
  if (self.hasImage) {
    size += computeStringSize(8, self.image);
  }
  if (self.hasMoredetails) {
    size += computeMessageSize(9, self.moredetails);
  }
  if (self.hasImagecategory) {
    size += computeStringSize(10, self.imagecategory);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRestDetail*) parseFromData:(NSData*) data {
  return (MsgRestDetail*)[[[MsgRestDetail builder] mergeFromData:data] build];
}
+ (MsgRestDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestDetail*)[[[MsgRestDetail builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRestDetail*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRestDetail*)[[[MsgRestDetail builder] mergeFromInputStream:input] build];
}
+ (MsgRestDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestDetail*)[[[MsgRestDetail builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRestDetail*)[[[MsgRestDetail builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRestDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestDetail*)[[[MsgRestDetail builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestDetail_Builder*) builder {
  return [[[MsgRestDetail_Builder alloc] init] autorelease];
}
+ (MsgRestDetail_Builder*) builderWithPrototype:(MsgRestDetail*) prototype {
  return [[MsgRestDetail builder] mergeFrom:prototype];
}
- (MsgRestDetail_Builder*) builder {
  return [MsgRestDetail builder];
}
@end

@interface MsgRestDetail_Builder()
@property (retain) MsgRestDetail* result;
@end

@implementation MsgRestDetail_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRestDetail alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRestDetail_Builder*) clear {
  self.result = [[[MsgRestDetail alloc] init] autorelease];
  return self;
}
- (MsgRestDetail_Builder*) clone {
  return [MsgRestDetail builderWithPrototype:result];
}
- (MsgRestDetail*) defaultInstance {
  return [MsgRestDetail defaultInstance];
}
- (MsgRestDetail*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRestDetail*) buildPartial {
  MsgRestDetail* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRestDetail_Builder*) mergeFrom:(MsgRestDetail*) other {
  if (other == [MsgRestDetail defaultInstance]) {
    return self;
  }
  if (other.hasTel) {
    [self setTel:other.tel];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasDishes) {
    [self setDishes:other.dishes];
  }
  if (other.hasSpecial) {
    [self setSpecial:other.special];
  }
  if (other.hasShophour) {
    [self setShophour:other.shophour];
  }
  if (other.hasTraffic) {
    [self setTraffic:other.traffic];
  }
  if (other.hasSituation) {
    [self setSituation:other.situation];
  }
  if (other.hasImage) {
    [self setImage:other.image];
  }
  if (other.hasMoredetails) {
    [self mergeMoredetails:other.moredetails];
  }
  if (other.hasImagecategory) {
    [self setImagecategory:other.imagecategory];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRestDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRestDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTel:[input readString]];
        break;
      }
      case 18: {
        [self setDesc:[input readString]];
        break;
      }
      case 26: {
        [self setDishes:[input readString]];
        break;
      }
      case 34: {
        [self setSpecial:[input readString]];
        break;
      }
      case 42: {
        [self setShophour:[input readString]];
        break;
      }
      case 50: {
        [self setTraffic:[input readString]];
        break;
      }
      case 58: {
        [self setSituation:[input readString]];
        break;
      }
      case 66: {
        [self setImage:[input readString]];
        break;
      }
      case 74: {
        MsgMoreDetails_Builder* subBuilder = [MsgMoreDetails builder];
        if (self.hasMoredetails) {
          [subBuilder mergeFrom:self.moredetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMoredetails:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        [self setImagecategory:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTel {
  return result.hasTel;
}
- (NSString*) tel {
  return result.tel;
}
- (MsgRestDetail_Builder*) setTel:(NSString*) value {
  result.hasTel = YES;
  result.tel = value;
  return self;
}
- (MsgRestDetail_Builder*) clearTel {
  result.hasTel = NO;
  result.tel = @"";
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (MsgRestDetail_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (MsgRestDetail_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasDishes {
  return result.hasDishes;
}
- (NSString*) dishes {
  return result.dishes;
}
- (MsgRestDetail_Builder*) setDishes:(NSString*) value {
  result.hasDishes = YES;
  result.dishes = value;
  return self;
}
- (MsgRestDetail_Builder*) clearDishes {
  result.hasDishes = NO;
  result.dishes = @"";
  return self;
}
- (BOOL) hasSpecial {
  return result.hasSpecial;
}
- (NSString*) special {
  return result.special;
}
- (MsgRestDetail_Builder*) setSpecial:(NSString*) value {
  result.hasSpecial = YES;
  result.special = value;
  return self;
}
- (MsgRestDetail_Builder*) clearSpecial {
  result.hasSpecial = NO;
  result.special = @"";
  return self;
}
- (BOOL) hasShophour {
  return result.hasShophour;
}
- (NSString*) shophour {
  return result.shophour;
}
- (MsgRestDetail_Builder*) setShophour:(NSString*) value {
  result.hasShophour = YES;
  result.shophour = value;
  return self;
}
- (MsgRestDetail_Builder*) clearShophour {
  result.hasShophour = NO;
  result.shophour = @"";
  return self;
}
- (BOOL) hasTraffic {
  return result.hasTraffic;
}
- (NSString*) traffic {
  return result.traffic;
}
- (MsgRestDetail_Builder*) setTraffic:(NSString*) value {
  result.hasTraffic = YES;
  result.traffic = value;
  return self;
}
- (MsgRestDetail_Builder*) clearTraffic {
  result.hasTraffic = NO;
  result.traffic = @"";
  return self;
}
- (BOOL) hasSituation {
  return result.hasSituation;
}
- (NSString*) situation {
  return result.situation;
}
- (MsgRestDetail_Builder*) setSituation:(NSString*) value {
  result.hasSituation = YES;
  result.situation = value;
  return self;
}
- (MsgRestDetail_Builder*) clearSituation {
  result.hasSituation = NO;
  result.situation = @"";
  return self;
}
- (BOOL) hasImage {
  return result.hasImage;
}
- (NSString*) image {
  return result.image;
}
- (MsgRestDetail_Builder*) setImage:(NSString*) value {
  result.hasImage = YES;
  result.image = value;
  return self;
}
- (MsgRestDetail_Builder*) clearImage {
  result.hasImage = NO;
  result.image = @"";
  return self;
}
- (BOOL) hasMoredetails {
  return result.hasMoredetails;
}
- (MsgMoreDetails*) moredetails {
  return result.moredetails;
}
- (MsgRestDetail_Builder*) setMoredetails:(MsgMoreDetails*) value {
  result.hasMoredetails = YES;
  result.moredetails = value;
  return self;
}
- (MsgRestDetail_Builder*) setMoredetailsBuilder:(MsgMoreDetails_Builder*) builderForValue {
  return [self setMoredetails:[builderForValue build]];
}
- (MsgRestDetail_Builder*) mergeMoredetails:(MsgMoreDetails*) value {
  if (result.hasMoredetails &&
      result.moredetails != [MsgMoreDetails defaultInstance]) {
    result.moredetails =
      [[[MsgMoreDetails builderWithPrototype:result.moredetails] mergeFrom:value] buildPartial];
  } else {
    result.moredetails = value;
  }
  result.hasMoredetails = YES;
  return self;
}
- (MsgRestDetail_Builder*) clearMoredetails {
  result.hasMoredetails = NO;
  result.moredetails = [MsgMoreDetails defaultInstance];
  return self;
}
- (BOOL) hasImagecategory {
  return result.hasImagecategory;
}
- (NSString*) imagecategory {
  return result.imagecategory;
}
- (MsgRestDetail_Builder*) setImagecategory:(NSString*) value {
  result.hasImagecategory = YES;
  result.imagecategory = value;
  return self;
}
- (MsgRestDetail_Builder*) clearImagecategory {
  result.hasImagecategory = NO;
  result.imagecategory = @"";
  return self;
}
@end

@interface MsgMoreDetails ()
@property (retain) PBAppendableArray * detailArray;
@end

@implementation MsgMoreDetails

@synthesize detailArray;
@dynamic detail;
- (void) dealloc {
  self.detailArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgMoreDetails* defaultMsgMoreDetailsInstance = nil;
+ (void) initialize {
  if (self == [MsgMoreDetails class]) {
    defaultMsgMoreDetailsInstance = [[MsgMoreDetails alloc] init];
  }
}
+ (MsgMoreDetails*) defaultInstance {
  return defaultMsgMoreDetailsInstance;
}
- (MsgMoreDetails*) defaultInstance {
  return defaultMsgMoreDetailsInstance;
}
- (PBArray *)detail {
  return detailArray;
}
- (MsgMoreDetail*)detailAtIndex:(NSUInteger)index {
  return [detailArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MsgMoreDetail *element in self.detailArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MsgMoreDetail *element in self.detailArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgMoreDetails*) parseFromData:(NSData*) data {
  return (MsgMoreDetails*)[[[MsgMoreDetails builder] mergeFromData:data] build];
}
+ (MsgMoreDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgMoreDetails*)[[[MsgMoreDetails builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgMoreDetails*) parseFromInputStream:(NSInputStream*) input {
  return (MsgMoreDetails*)[[[MsgMoreDetails builder] mergeFromInputStream:input] build];
}
+ (MsgMoreDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgMoreDetails*)[[[MsgMoreDetails builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgMoreDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgMoreDetails*)[[[MsgMoreDetails builder] mergeFromCodedInputStream:input] build];
}
+ (MsgMoreDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgMoreDetails*)[[[MsgMoreDetails builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgMoreDetails_Builder*) builder {
  return [[[MsgMoreDetails_Builder alloc] init] autorelease];
}
+ (MsgMoreDetails_Builder*) builderWithPrototype:(MsgMoreDetails*) prototype {
  return [[MsgMoreDetails builder] mergeFrom:prototype];
}
- (MsgMoreDetails_Builder*) builder {
  return [MsgMoreDetails builder];
}
@end

@interface MsgMoreDetails_Builder()
@property (retain) MsgMoreDetails* result;
@end

@implementation MsgMoreDetails_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgMoreDetails alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgMoreDetails_Builder*) clear {
  self.result = [[[MsgMoreDetails alloc] init] autorelease];
  return self;
}
- (MsgMoreDetails_Builder*) clone {
  return [MsgMoreDetails builderWithPrototype:result];
}
- (MsgMoreDetails*) defaultInstance {
  return [MsgMoreDetails defaultInstance];
}
- (MsgMoreDetails*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgMoreDetails*) buildPartial {
  MsgMoreDetails* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgMoreDetails_Builder*) mergeFrom:(MsgMoreDetails*) other {
  if (other == [MsgMoreDetails defaultInstance]) {
    return self;
  }
  if (other.detailArray.count > 0) {
    if (result.detailArray == nil) {
      result.detailArray = [[other.detailArray copyWithZone:[other.detailArray zone]] autorelease];
    } else {
      [result.detailArray appendArray:other.detailArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgMoreDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgMoreDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgMoreDetail_Builder* subBuilder = [MsgMoreDetail builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDetail:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)detail {
  return result.detailArray;
}
- (MsgMoreDetail*)detailAtIndex:(NSUInteger)index {
  return [result detailAtIndex:index];
}
- (MsgMoreDetails_Builder *)addDetail:(MsgMoreDetail*)value {
  if (result.detailArray == nil) {
    result.detailArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.detailArray addObject:value];
  return self;
}
- (MsgMoreDetails_Builder *)setDetailArray:(NSArray *)array {
  result.detailArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgMoreDetails_Builder *)setDetailValues:(const MsgMoreDetail* *)values count:(NSUInteger)count {
  result.detailArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgMoreDetails_Builder *)clearDetail {
  result.detailArray = nil;
  return self;
}
@end

@interface MsgMoreDetail ()
@property (retain) NSString* label;
@property (retain) NSString* payload;
@end

@implementation MsgMoreDetail

- (BOOL) hasLabel {
  return !!hasLabel_;
}
- (void) setHasLabel:(BOOL) value {
  hasLabel_ = !!value;
}
@synthesize label;
- (BOOL) hasPayload {
  return !!hasPayload_;
}
- (void) setHasPayload:(BOOL) value {
  hasPayload_ = !!value;
}
@synthesize payload;
- (void) dealloc {
  self.label = nil;
  self.payload = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.label = @"";
    self.payload = @"";
  }
  return self;
}
static MsgMoreDetail* defaultMsgMoreDetailInstance = nil;
+ (void) initialize {
  if (self == [MsgMoreDetail class]) {
    defaultMsgMoreDetailInstance = [[MsgMoreDetail alloc] init];
  }
}
+ (MsgMoreDetail*) defaultInstance {
  return defaultMsgMoreDetailInstance;
}
- (MsgMoreDetail*) defaultInstance {
  return defaultMsgMoreDetailInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLabel) {
    [output writeString:1 value:self.label];
  }
  if (self.hasPayload) {
    [output writeString:2 value:self.payload];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLabel) {
    size += computeStringSize(1, self.label);
  }
  if (self.hasPayload) {
    size += computeStringSize(2, self.payload);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgMoreDetail*) parseFromData:(NSData*) data {
  return (MsgMoreDetail*)[[[MsgMoreDetail builder] mergeFromData:data] build];
}
+ (MsgMoreDetail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgMoreDetail*)[[[MsgMoreDetail builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgMoreDetail*) parseFromInputStream:(NSInputStream*) input {
  return (MsgMoreDetail*)[[[MsgMoreDetail builder] mergeFromInputStream:input] build];
}
+ (MsgMoreDetail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgMoreDetail*)[[[MsgMoreDetail builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgMoreDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgMoreDetail*)[[[MsgMoreDetail builder] mergeFromCodedInputStream:input] build];
}
+ (MsgMoreDetail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgMoreDetail*)[[[MsgMoreDetail builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgMoreDetail_Builder*) builder {
  return [[[MsgMoreDetail_Builder alloc] init] autorelease];
}
+ (MsgMoreDetail_Builder*) builderWithPrototype:(MsgMoreDetail*) prototype {
  return [[MsgMoreDetail builder] mergeFrom:prototype];
}
- (MsgMoreDetail_Builder*) builder {
  return [MsgMoreDetail builder];
}
@end

@interface MsgMoreDetail_Builder()
@property (retain) MsgMoreDetail* result;
@end

@implementation MsgMoreDetail_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgMoreDetail alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgMoreDetail_Builder*) clear {
  self.result = [[[MsgMoreDetail alloc] init] autorelease];
  return self;
}
- (MsgMoreDetail_Builder*) clone {
  return [MsgMoreDetail builderWithPrototype:result];
}
- (MsgMoreDetail*) defaultInstance {
  return [MsgMoreDetail defaultInstance];
}
- (MsgMoreDetail*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgMoreDetail*) buildPartial {
  MsgMoreDetail* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgMoreDetail_Builder*) mergeFrom:(MsgMoreDetail*) other {
  if (other == [MsgMoreDetail defaultInstance]) {
    return self;
  }
  if (other.hasLabel) {
    [self setLabel:other.label];
  }
  if (other.hasPayload) {
    [self setPayload:other.payload];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgMoreDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgMoreDetail_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setLabel:[input readString]];
        break;
      }
      case 18: {
        [self setPayload:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLabel {
  return result.hasLabel;
}
- (NSString*) label {
  return result.label;
}
- (MsgMoreDetail_Builder*) setLabel:(NSString*) value {
  result.hasLabel = YES;
  result.label = value;
  return self;
}
- (MsgMoreDetail_Builder*) clearLabel {
  result.hasLabel = NO;
  result.label = @"";
  return self;
}
- (BOOL) hasPayload {
  return result.hasPayload;
}
- (NSString*) payload {
  return result.payload;
}
- (MsgMoreDetail_Builder*) setPayload:(NSString*) value {
  result.hasPayload = YES;
  result.payload = value;
  return self;
}
- (MsgMoreDetail_Builder*) clearPayload {
  result.hasPayload = NO;
  result.payload = @"";
  return self;
}
@end

@interface MsgRestUgc ()
@property Float32 rate;
@property int64_t rateTime;
@property BOOL favored;
@property (retain) NSString* commentString;
@end

@implementation MsgRestUgc

- (BOOL) hasRate {
  return !!hasRate_;
}
- (void) setHasRate:(BOOL) value {
  hasRate_ = !!value;
}
@synthesize rate;
- (BOOL) hasRateTime {
  return !!hasRateTime_;
}
- (void) setHasRateTime:(BOOL) value {
  hasRateTime_ = !!value;
}
@synthesize rateTime;
- (BOOL) hasFavored {
  return !!hasFavored_;
}
- (void) setHasFavored:(BOOL) value {
  hasFavored_ = !!value;
}
- (BOOL) favored {
  return !!favored_;
}
- (void) setFavored:(BOOL) value {
  favored_ = !!value;
}
- (BOOL) hasCommentString {
  return !!hasCommentString_;
}
- (void) setHasCommentString:(BOOL) value {
  hasCommentString_ = !!value;
}
@synthesize commentString;
- (void) dealloc {
  self.commentString = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.rate = 0;
    self.rateTime = 0L;
    self.favored = NO;
    self.commentString = @"";
  }
  return self;
}
static MsgRestUgc* defaultMsgRestUgcInstance = nil;
+ (void) initialize {
  if (self == [MsgRestUgc class]) {
    defaultMsgRestUgcInstance = [[MsgRestUgc alloc] init];
  }
}
+ (MsgRestUgc*) defaultInstance {
  return defaultMsgRestUgcInstance;
}
- (MsgRestUgc*) defaultInstance {
  return defaultMsgRestUgcInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRate) {
    [output writeFloat:1 value:self.rate];
  }
  if (self.hasRateTime) {
    [output writeInt64:2 value:self.rateTime];
  }
  if (self.hasFavored) {
    [output writeBool:3 value:self.favored];
  }
  if (self.hasCommentString) {
    [output writeString:4 value:self.commentString];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRate) {
    size += computeFloatSize(1, self.rate);
  }
  if (self.hasRateTime) {
    size += computeInt64Size(2, self.rateTime);
  }
  if (self.hasFavored) {
    size += computeBoolSize(3, self.favored);
  }
  if (self.hasCommentString) {
    size += computeStringSize(4, self.commentString);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRestUgc*) parseFromData:(NSData*) data {
  return (MsgRestUgc*)[[[MsgRestUgc builder] mergeFromData:data] build];
}
+ (MsgRestUgc*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestUgc*)[[[MsgRestUgc builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRestUgc*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRestUgc*)[[[MsgRestUgc builder] mergeFromInputStream:input] build];
}
+ (MsgRestUgc*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestUgc*)[[[MsgRestUgc builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestUgc*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRestUgc*)[[[MsgRestUgc builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRestUgc*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestUgc*)[[[MsgRestUgc builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestUgc_Builder*) builder {
  return [[[MsgRestUgc_Builder alloc] init] autorelease];
}
+ (MsgRestUgc_Builder*) builderWithPrototype:(MsgRestUgc*) prototype {
  return [[MsgRestUgc builder] mergeFrom:prototype];
}
- (MsgRestUgc_Builder*) builder {
  return [MsgRestUgc builder];
}
@end

@interface MsgRestUgc_Builder()
@property (retain) MsgRestUgc* result;
@end

@implementation MsgRestUgc_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRestUgc alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRestUgc_Builder*) clear {
  self.result = [[[MsgRestUgc alloc] init] autorelease];
  return self;
}
- (MsgRestUgc_Builder*) clone {
  return [MsgRestUgc builderWithPrototype:result];
}
- (MsgRestUgc*) defaultInstance {
  return [MsgRestUgc defaultInstance];
}
- (MsgRestUgc*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRestUgc*) buildPartial {
  MsgRestUgc* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRestUgc_Builder*) mergeFrom:(MsgRestUgc*) other {
  if (other == [MsgRestUgc defaultInstance]) {
    return self;
  }
  if (other.hasRate) {
    [self setRate:other.rate];
  }
  if (other.hasRateTime) {
    [self setRateTime:other.rateTime];
  }
  if (other.hasFavored) {
    [self setFavored:other.favored];
  }
  if (other.hasCommentString) {
    [self setCommentString:other.commentString];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRestUgc_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRestUgc_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setRate:[input readFloat]];
        break;
      }
      case 16: {
        [self setRateTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setFavored:[input readBool]];
        break;
      }
      case 34: {
        [self setCommentString:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRate {
  return result.hasRate;
}
- (Float32) rate {
  return result.rate;
}
- (MsgRestUgc_Builder*) setRate:(Float32) value {
  result.hasRate = YES;
  result.rate = value;
  return self;
}
- (MsgRestUgc_Builder*) clearRate {
  result.hasRate = NO;
  result.rate = 0;
  return self;
}
- (BOOL) hasRateTime {
  return result.hasRateTime;
}
- (int64_t) rateTime {
  return result.rateTime;
}
- (MsgRestUgc_Builder*) setRateTime:(int64_t) value {
  result.hasRateTime = YES;
  result.rateTime = value;
  return self;
}
- (MsgRestUgc_Builder*) clearRateTime {
  result.hasRateTime = NO;
  result.rateTime = 0L;
  return self;
}
- (BOOL) hasFavored {
  return result.hasFavored;
}
- (BOOL) favored {
  return result.favored;
}
- (MsgRestUgc_Builder*) setFavored:(BOOL) value {
  result.hasFavored = YES;
  result.favored = value;
  return self;
}
- (MsgRestUgc_Builder*) clearFavored {
  result.hasFavored = NO;
  result.favored = NO;
  return self;
}
- (BOOL) hasCommentString {
  return result.hasCommentString;
}
- (NSString*) commentString {
  return result.commentString;
}
- (MsgRestUgc_Builder*) setCommentString:(NSString*) value {
  result.hasCommentString = YES;
  result.commentString = value;
  return self;
}
- (MsgRestUgc_Builder*) clearCommentString {
  result.hasCommentString = NO;
  result.commentString = @"";
  return self;
}
@end

@interface MsgRestRecommend ()
@property Float32 dist;
@property Float32 predicted;
@property Float32 rank;
@property (retain) PBAppendableArray * reasonsArray;
@property (retain) PBAppendableArray * reasonTypesArray;
@property (retain) PBAppendableArray * reasonInfosArray;
@end

@implementation MsgRestRecommend

- (BOOL) hasDist {
  return !!hasDist_;
}
- (void) setHasDist:(BOOL) value {
  hasDist_ = !!value;
}
@synthesize dist;
- (BOOL) hasPredicted {
  return !!hasPredicted_;
}
- (void) setHasPredicted:(BOOL) value {
  hasPredicted_ = !!value;
}
@synthesize predicted;
- (BOOL) hasRank {
  return !!hasRank_;
}
- (void) setHasRank:(BOOL) value {
  hasRank_ = !!value;
}
@synthesize rank;
@synthesize reasonsArray;
@dynamic reasons;
@synthesize reasonTypesArray;
@dynamic reasonTypes;
@synthesize reasonInfosArray;
@dynamic reasonInfos;
- (void) dealloc {
  self.reasonsArray = nil;
  self.reasonTypesArray = nil;
  self.reasonInfosArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.dist = 0;
    self.predicted = 0;
    self.rank = 0;
  }
  return self;
}
static MsgRestRecommend* defaultMsgRestRecommendInstance = nil;
+ (void) initialize {
  if (self == [MsgRestRecommend class]) {
    defaultMsgRestRecommendInstance = [[MsgRestRecommend alloc] init];
  }
}
+ (MsgRestRecommend*) defaultInstance {
  return defaultMsgRestRecommendInstance;
}
- (MsgRestRecommend*) defaultInstance {
  return defaultMsgRestRecommendInstance;
}
- (PBArray *)reasons {
  return reasonsArray;
}
- (NSString*)reasonsAtIndex:(NSUInteger)index {
  return [reasonsArray objectAtIndex:index];
}
- (PBArray *)reasonTypes {
  return reasonTypesArray;
}
- (RecommendParams_ReasonType)reasonTypesAtIndex:(NSUInteger)index {
  return [reasonTypesArray int32AtIndex:index];
}
- (PBArray *)reasonInfos {
  return reasonInfosArray;
}
- (MsgReasonInfo*)reasonInfosAtIndex:(NSUInteger)index {
  return [reasonInfosArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (MsgReasonInfo* element in self.reasonInfos) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDist) {
    [output writeFloat:1 value:self.dist];
  }
  if (self.hasPredicted) {
    [output writeFloat:2 value:self.predicted];
  }
  if (self.hasRank) {
    [output writeFloat:3 value:self.rank];
  }
  const NSUInteger reasonsArrayCount = self.reasonsArray.count;
  if (reasonsArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.reasonsArray.data;
    for (NSUInteger i = 0; i < reasonsArrayCount; ++i) {
      [output writeString:4 value:values[i]];
    }
  }
  const NSUInteger reasonTypesArrayCount = self.reasonTypesArray.count;
  const RecommendParams_ReasonType *reasonTypesArrayValues = (const RecommendParams_ReasonType *)self.reasonTypesArray.data;
  for (NSUInteger i = 0; i < reasonTypesArrayCount; ++i) {
    [output writeEnum:5 value:reasonTypesArrayValues[i]];
  }
  for (MsgReasonInfo *element in self.reasonInfosArray) {
    [output writeMessage:6 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDist) {
    size += computeFloatSize(1, self.dist);
  }
  if (self.hasPredicted) {
    size += computeFloatSize(2, self.predicted);
  }
  if (self.hasRank) {
    size += computeFloatSize(3, self.rank);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.reasonsArray.count;
    const NSString* *values = (const NSString* *)self.reasonsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size += dataSize;
    size += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.reasonTypesArray.count;
    const RecommendParams_ReasonType *values = (const RecommendParams_ReasonType *)self.reasonTypesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeEnumSizeNoTag(values[i]);
    }
    size += dataSize;
    size += 1 * count;
  }
  for (MsgReasonInfo *element in self.reasonInfosArray) {
    size += computeMessageSize(6, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRestRecommend*) parseFromData:(NSData*) data {
  return (MsgRestRecommend*)[[[MsgRestRecommend builder] mergeFromData:data] build];
}
+ (MsgRestRecommend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestRecommend*)[[[MsgRestRecommend builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRestRecommend*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRestRecommend*)[[[MsgRestRecommend builder] mergeFromInputStream:input] build];
}
+ (MsgRestRecommend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestRecommend*)[[[MsgRestRecommend builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestRecommend*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRestRecommend*)[[[MsgRestRecommend builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRestRecommend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestRecommend*)[[[MsgRestRecommend builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestRecommend_Builder*) builder {
  return [[[MsgRestRecommend_Builder alloc] init] autorelease];
}
+ (MsgRestRecommend_Builder*) builderWithPrototype:(MsgRestRecommend*) prototype {
  return [[MsgRestRecommend builder] mergeFrom:prototype];
}
- (MsgRestRecommend_Builder*) builder {
  return [MsgRestRecommend builder];
}
@end

@interface MsgRestRecommend_Builder()
@property (retain) MsgRestRecommend* result;
@end

@implementation MsgRestRecommend_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRestRecommend alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRestRecommend_Builder*) clear {
  self.result = [[[MsgRestRecommend alloc] init] autorelease];
  return self;
}
- (MsgRestRecommend_Builder*) clone {
  return [MsgRestRecommend builderWithPrototype:result];
}
- (MsgRestRecommend*) defaultInstance {
  return [MsgRestRecommend defaultInstance];
}
- (MsgRestRecommend*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRestRecommend*) buildPartial {
  MsgRestRecommend* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRestRecommend_Builder*) mergeFrom:(MsgRestRecommend*) other {
  if (other == [MsgRestRecommend defaultInstance]) {
    return self;
  }
  if (other.hasDist) {
    [self setDist:other.dist];
  }
  if (other.hasPredicted) {
    [self setPredicted:other.predicted];
  }
  if (other.hasRank) {
    [self setRank:other.rank];
  }
  if (other.reasonsArray.count > 0) {
    if (result.reasonsArray == nil) {
      result.reasonsArray = [[other.reasonsArray copyWithZone:[other.reasonsArray zone]] autorelease];
    } else {
      [result.reasonsArray appendArray:other.reasonsArray];
    }
  }
  if (other.reasonTypesArray.count > 0) {
    if (result.reasonTypesArray == nil) {
      result.reasonTypesArray = [[other.reasonTypesArray copyWithZone:[other.reasonTypesArray zone]] autorelease];
    } else {
      [result.reasonTypesArray appendArray:other.reasonTypesArray];
    }
  }
  if (other.reasonInfosArray.count > 0) {
    if (result.reasonInfosArray == nil) {
      result.reasonInfosArray = [[other.reasonInfosArray copyWithZone:[other.reasonInfosArray zone]] autorelease];
    } else {
      [result.reasonInfosArray appendArray:other.reasonInfosArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRestRecommend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRestRecommend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setDist:[input readFloat]];
        break;
      }
      case 21: {
        [self setPredicted:[input readFloat]];
        break;
      }
      case 29: {
        [self setRank:[input readFloat]];
        break;
      }
      case 34: {
        [self addReasons:[input readString]];
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (RecommendParams_ReasonTypeIsValidValue(value)) {
          [self addReasonTypes:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 50: {
        MsgReasonInfo_Builder* subBuilder = [MsgReasonInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReasonInfos:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDist {
  return result.hasDist;
}
- (Float32) dist {
  return result.dist;
}
- (MsgRestRecommend_Builder*) setDist:(Float32) value {
  result.hasDist = YES;
  result.dist = value;
  return self;
}
- (MsgRestRecommend_Builder*) clearDist {
  result.hasDist = NO;
  result.dist = 0;
  return self;
}
- (BOOL) hasPredicted {
  return result.hasPredicted;
}
- (Float32) predicted {
  return result.predicted;
}
- (MsgRestRecommend_Builder*) setPredicted:(Float32) value {
  result.hasPredicted = YES;
  result.predicted = value;
  return self;
}
- (MsgRestRecommend_Builder*) clearPredicted {
  result.hasPredicted = NO;
  result.predicted = 0;
  return self;
}
- (BOOL) hasRank {
  return result.hasRank;
}
- (Float32) rank {
  return result.rank;
}
- (MsgRestRecommend_Builder*) setRank:(Float32) value {
  result.hasRank = YES;
  result.rank = value;
  return self;
}
- (MsgRestRecommend_Builder*) clearRank {
  result.hasRank = NO;
  result.rank = 0;
  return self;
}
- (PBAppendableArray *)reasons {
  return result.reasonsArray;
}
- (NSString*)reasonsAtIndex:(NSUInteger)index {
  return [result reasonsAtIndex:index];
}
- (MsgRestRecommend_Builder *)addReasons:(NSString*)value {
  if (result.reasonsArray == nil) {
    result.reasonsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.reasonsArray addObject:value];
  return self;
}
- (MsgRestRecommend_Builder *)setReasonsArray:(NSArray *)array {
  result.reasonsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestRecommend_Builder *)setReasonsValues:(const NSString* *)values count:(NSUInteger)count {
  result.reasonsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestRecommend_Builder *)clearReasons {
  result.reasonsArray = nil;
  return self;
}
- (PBAppendableArray *)reasonTypes {
  return result.reasonTypesArray;
}
- (RecommendParams_ReasonType)reasonTypesAtIndex:(NSUInteger)index {
  return [result reasonTypesAtIndex:index];
}
- (MsgRestRecommend_Builder *)addReasonTypes:(RecommendParams_ReasonType)value {
  if (result.reasonTypesArray == nil) {
    result.reasonTypesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.reasonTypesArray addInt32:value];
  return self;
}
- (MsgRestRecommend_Builder *)setReasonTypesArray:(NSArray *)array {
  result.reasonTypesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (MsgRestRecommend_Builder *)setReasonTypesValues:(const RecommendParams_ReasonType *)values count:(NSUInteger)count {
  result.reasonTypesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (MsgRestRecommend_Builder *)clearReasonTypes {
  result.reasonTypesArray = nil;
  return self;
}
- (PBAppendableArray *)reasonInfos {
  return result.reasonInfosArray;
}
- (MsgReasonInfo*)reasonInfosAtIndex:(NSUInteger)index {
  return [result reasonInfosAtIndex:index];
}
- (MsgRestRecommend_Builder *)addReasonInfos:(MsgReasonInfo*)value {
  if (result.reasonInfosArray == nil) {
    result.reasonInfosArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.reasonInfosArray addObject:value];
  return self;
}
- (MsgRestRecommend_Builder *)setReasonInfosArray:(NSArray *)array {
  result.reasonInfosArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestRecommend_Builder *)setReasonInfosValues:(const MsgReasonInfo* *)values count:(NSUInteger)count {
  result.reasonInfosArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestRecommend_Builder *)clearReasonInfos {
  result.reasonInfosArray = nil;
  return self;
}
@end

@interface MsgReasonInfo ()
@property (retain) NSString* reason;
@property int32_t type;
@end

@implementation MsgReasonInfo

- (BOOL) hasReason {
  return !!hasReason_;
}
- (void) setHasReason:(BOOL) value {
  hasReason_ = !!value;
}
@synthesize reason;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (void) dealloc {
  self.reason = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.reason = @"";
    self.type = 0;
  }
  return self;
}
static MsgReasonInfo* defaultMsgReasonInfoInstance = nil;
+ (void) initialize {
  if (self == [MsgReasonInfo class]) {
    defaultMsgReasonInfoInstance = [[MsgReasonInfo alloc] init];
  }
}
+ (MsgReasonInfo*) defaultInstance {
  return defaultMsgReasonInfoInstance;
}
- (MsgReasonInfo*) defaultInstance {
  return defaultMsgReasonInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasReason) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReason) {
    [output writeString:1 value:self.reason];
  }
  if (self.hasType) {
    [output writeInt32:2 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasReason) {
    size += computeStringSize(1, self.reason);
  }
  if (self.hasType) {
    size += computeInt32Size(2, self.type);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgReasonInfo*) parseFromData:(NSData*) data {
  return (MsgReasonInfo*)[[[MsgReasonInfo builder] mergeFromData:data] build];
}
+ (MsgReasonInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgReasonInfo*)[[[MsgReasonInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgReasonInfo*) parseFromInputStream:(NSInputStream*) input {
  return (MsgReasonInfo*)[[[MsgReasonInfo builder] mergeFromInputStream:input] build];
}
+ (MsgReasonInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgReasonInfo*)[[[MsgReasonInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgReasonInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgReasonInfo*)[[[MsgReasonInfo builder] mergeFromCodedInputStream:input] build];
}
+ (MsgReasonInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgReasonInfo*)[[[MsgReasonInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgReasonInfo_Builder*) builder {
  return [[[MsgReasonInfo_Builder alloc] init] autorelease];
}
+ (MsgReasonInfo_Builder*) builderWithPrototype:(MsgReasonInfo*) prototype {
  return [[MsgReasonInfo builder] mergeFrom:prototype];
}
- (MsgReasonInfo_Builder*) builder {
  return [MsgReasonInfo builder];
}
@end

@interface MsgReasonInfo_Builder()
@property (retain) MsgReasonInfo* result;
@end

@implementation MsgReasonInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgReasonInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgReasonInfo_Builder*) clear {
  self.result = [[[MsgReasonInfo alloc] init] autorelease];
  return self;
}
- (MsgReasonInfo_Builder*) clone {
  return [MsgReasonInfo builderWithPrototype:result];
}
- (MsgReasonInfo*) defaultInstance {
  return [MsgReasonInfo defaultInstance];
}
- (MsgReasonInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgReasonInfo*) buildPartial {
  MsgReasonInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgReasonInfo_Builder*) mergeFrom:(MsgReasonInfo*) other {
  if (other == [MsgReasonInfo defaultInstance]) {
    return self;
  }
  if (other.hasReason) {
    [self setReason:other.reason];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgReasonInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgReasonInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setReason:[input readString]];
        break;
      }
      case 16: {
        [self setType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasReason {
  return result.hasReason;
}
- (NSString*) reason {
  return result.reason;
}
- (MsgReasonInfo_Builder*) setReason:(NSString*) value {
  result.hasReason = YES;
  result.reason = value;
  return self;
}
- (MsgReasonInfo_Builder*) clearReason {
  result.hasReason = NO;
  result.reason = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (MsgReasonInfo_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (MsgReasonInfo_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
@end

@interface MsgEditorSelected ()
@property Float32 dist;
@property (retain) NSString* selectedText;
@property (retain) NSString* dishes;
@property (retain) NSString* imageType;
@property (retain) NSString* imageUrl;
@property int32_t batch;
@property (retain) NSString* title;
@property (retain) NSString* detailText;
@end

@implementation MsgEditorSelected

- (BOOL) hasDist {
  return !!hasDist_;
}
- (void) setHasDist:(BOOL) value {
  hasDist_ = !!value;
}
@synthesize dist;
- (BOOL) hasSelectedText {
  return !!hasSelectedText_;
}
- (void) setHasSelectedText:(BOOL) value {
  hasSelectedText_ = !!value;
}
@synthesize selectedText;
- (BOOL) hasDishes {
  return !!hasDishes_;
}
- (void) setHasDishes:(BOOL) value {
  hasDishes_ = !!value;
}
@synthesize dishes;
- (BOOL) hasImageType {
  return !!hasImageType_;
}
- (void) setHasImageType:(BOOL) value {
  hasImageType_ = !!value;
}
@synthesize imageType;
- (BOOL) hasImageUrl {
  return !!hasImageUrl_;
}
- (void) setHasImageUrl:(BOOL) value {
  hasImageUrl_ = !!value;
}
@synthesize imageUrl;
- (BOOL) hasBatch {
  return !!hasBatch_;
}
- (void) setHasBatch:(BOOL) value {
  hasBatch_ = !!value;
}
@synthesize batch;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasDetailText {
  return !!hasDetailText_;
}
- (void) setHasDetailText:(BOOL) value {
  hasDetailText_ = !!value;
}
@synthesize detailText;
- (void) dealloc {
  self.selectedText = nil;
  self.dishes = nil;
  self.imageType = nil;
  self.imageUrl = nil;
  self.title = nil;
  self.detailText = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.dist = 0;
    self.selectedText = @"";
    self.dishes = @"";
    self.imageType = @"";
    self.imageUrl = @"";
    self.batch = 0;
    self.title = @"";
    self.detailText = @"";
  }
  return self;
}
static MsgEditorSelected* defaultMsgEditorSelectedInstance = nil;
+ (void) initialize {
  if (self == [MsgEditorSelected class]) {
    defaultMsgEditorSelectedInstance = [[MsgEditorSelected alloc] init];
  }
}
+ (MsgEditorSelected*) defaultInstance {
  return defaultMsgEditorSelectedInstance;
}
- (MsgEditorSelected*) defaultInstance {
  return defaultMsgEditorSelectedInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDist) {
    [output writeFloat:1 value:self.dist];
  }
  if (self.hasSelectedText) {
    [output writeString:2 value:self.selectedText];
  }
  if (self.hasDishes) {
    [output writeString:3 value:self.dishes];
  }
  if (self.hasImageType) {
    [output writeString:4 value:self.imageType];
  }
  if (self.hasImageUrl) {
    [output writeString:5 value:self.imageUrl];
  }
  if (self.hasBatch) {
    [output writeInt32:6 value:self.batch];
  }
  if (self.hasTitle) {
    [output writeString:7 value:self.title];
  }
  if (self.hasDetailText) {
    [output writeString:8 value:self.detailText];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDist) {
    size += computeFloatSize(1, self.dist);
  }
  if (self.hasSelectedText) {
    size += computeStringSize(2, self.selectedText);
  }
  if (self.hasDishes) {
    size += computeStringSize(3, self.dishes);
  }
  if (self.hasImageType) {
    size += computeStringSize(4, self.imageType);
  }
  if (self.hasImageUrl) {
    size += computeStringSize(5, self.imageUrl);
  }
  if (self.hasBatch) {
    size += computeInt32Size(6, self.batch);
  }
  if (self.hasTitle) {
    size += computeStringSize(7, self.title);
  }
  if (self.hasDetailText) {
    size += computeStringSize(8, self.detailText);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgEditorSelected*) parseFromData:(NSData*) data {
  return (MsgEditorSelected*)[[[MsgEditorSelected builder] mergeFromData:data] build];
}
+ (MsgEditorSelected*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgEditorSelected*)[[[MsgEditorSelected builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgEditorSelected*) parseFromInputStream:(NSInputStream*) input {
  return (MsgEditorSelected*)[[[MsgEditorSelected builder] mergeFromInputStream:input] build];
}
+ (MsgEditorSelected*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgEditorSelected*)[[[MsgEditorSelected builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgEditorSelected*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgEditorSelected*)[[[MsgEditorSelected builder] mergeFromCodedInputStream:input] build];
}
+ (MsgEditorSelected*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgEditorSelected*)[[[MsgEditorSelected builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgEditorSelected_Builder*) builder {
  return [[[MsgEditorSelected_Builder alloc] init] autorelease];
}
+ (MsgEditorSelected_Builder*) builderWithPrototype:(MsgEditorSelected*) prototype {
  return [[MsgEditorSelected builder] mergeFrom:prototype];
}
- (MsgEditorSelected_Builder*) builder {
  return [MsgEditorSelected builder];
}
@end

@interface MsgEditorSelected_Builder()
@property (retain) MsgEditorSelected* result;
@end

@implementation MsgEditorSelected_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgEditorSelected alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgEditorSelected_Builder*) clear {
  self.result = [[[MsgEditorSelected alloc] init] autorelease];
  return self;
}
- (MsgEditorSelected_Builder*) clone {
  return [MsgEditorSelected builderWithPrototype:result];
}
- (MsgEditorSelected*) defaultInstance {
  return [MsgEditorSelected defaultInstance];
}
- (MsgEditorSelected*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgEditorSelected*) buildPartial {
  MsgEditorSelected* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgEditorSelected_Builder*) mergeFrom:(MsgEditorSelected*) other {
  if (other == [MsgEditorSelected defaultInstance]) {
    return self;
  }
  if (other.hasDist) {
    [self setDist:other.dist];
  }
  if (other.hasSelectedText) {
    [self setSelectedText:other.selectedText];
  }
  if (other.hasDishes) {
    [self setDishes:other.dishes];
  }
  if (other.hasImageType) {
    [self setImageType:other.imageType];
  }
  if (other.hasImageUrl) {
    [self setImageUrl:other.imageUrl];
  }
  if (other.hasBatch) {
    [self setBatch:other.batch];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasDetailText) {
    [self setDetailText:other.detailText];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgEditorSelected_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgEditorSelected_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setDist:[input readFloat]];
        break;
      }
      case 18: {
        [self setSelectedText:[input readString]];
        break;
      }
      case 26: {
        [self setDishes:[input readString]];
        break;
      }
      case 34: {
        [self setImageType:[input readString]];
        break;
      }
      case 42: {
        [self setImageUrl:[input readString]];
        break;
      }
      case 48: {
        [self setBatch:[input readInt32]];
        break;
      }
      case 58: {
        [self setTitle:[input readString]];
        break;
      }
      case 66: {
        [self setDetailText:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDist {
  return result.hasDist;
}
- (Float32) dist {
  return result.dist;
}
- (MsgEditorSelected_Builder*) setDist:(Float32) value {
  result.hasDist = YES;
  result.dist = value;
  return self;
}
- (MsgEditorSelected_Builder*) clearDist {
  result.hasDist = NO;
  result.dist = 0;
  return self;
}
- (BOOL) hasSelectedText {
  return result.hasSelectedText;
}
- (NSString*) selectedText {
  return result.selectedText;
}
- (MsgEditorSelected_Builder*) setSelectedText:(NSString*) value {
  result.hasSelectedText = YES;
  result.selectedText = value;
  return self;
}
- (MsgEditorSelected_Builder*) clearSelectedText {
  result.hasSelectedText = NO;
  result.selectedText = @"";
  return self;
}
- (BOOL) hasDishes {
  return result.hasDishes;
}
- (NSString*) dishes {
  return result.dishes;
}
- (MsgEditorSelected_Builder*) setDishes:(NSString*) value {
  result.hasDishes = YES;
  result.dishes = value;
  return self;
}
- (MsgEditorSelected_Builder*) clearDishes {
  result.hasDishes = NO;
  result.dishes = @"";
  return self;
}
- (BOOL) hasImageType {
  return result.hasImageType;
}
- (NSString*) imageType {
  return result.imageType;
}
- (MsgEditorSelected_Builder*) setImageType:(NSString*) value {
  result.hasImageType = YES;
  result.imageType = value;
  return self;
}
- (MsgEditorSelected_Builder*) clearImageType {
  result.hasImageType = NO;
  result.imageType = @"";
  return self;
}
- (BOOL) hasImageUrl {
  return result.hasImageUrl;
}
- (NSString*) imageUrl {
  return result.imageUrl;
}
- (MsgEditorSelected_Builder*) setImageUrl:(NSString*) value {
  result.hasImageUrl = YES;
  result.imageUrl = value;
  return self;
}
- (MsgEditorSelected_Builder*) clearImageUrl {
  result.hasImageUrl = NO;
  result.imageUrl = @"";
  return self;
}
- (BOOL) hasBatch {
  return result.hasBatch;
}
- (int32_t) batch {
  return result.batch;
}
- (MsgEditorSelected_Builder*) setBatch:(int32_t) value {
  result.hasBatch = YES;
  result.batch = value;
  return self;
}
- (MsgEditorSelected_Builder*) clearBatch {
  result.hasBatch = NO;
  result.batch = 0;
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (MsgEditorSelected_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (MsgEditorSelected_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasDetailText {
  return result.hasDetailText;
}
- (NSString*) detailText {
  return result.detailText;
}
- (MsgEditorSelected_Builder*) setDetailText:(NSString*) value {
  result.hasDetailText = YES;
  result.detailText = value;
  return self;
}
- (MsgEditorSelected_Builder*) clearDetailText {
  result.hasDetailText = NO;
  result.detailText = @"";
  return self;
}
@end

@interface MsgRestInfo ()
@property (retain) MsgRestBrief* brief;
@property (retain) MsgRestDetail* detail;
@property (retain) MsgRestUgc* ugc;
@property (retain) MsgRestRecommend* rec;
@property (retain) PBAppendableArray * dishesArray;
@property (retain) MsgEditorSelected* selected;
@end

@implementation MsgRestInfo

- (BOOL) hasBrief {
  return !!hasBrief_;
}
- (void) setHasBrief:(BOOL) value {
  hasBrief_ = !!value;
}
@synthesize brief;
- (BOOL) hasDetail {
  return !!hasDetail_;
}
- (void) setHasDetail:(BOOL) value {
  hasDetail_ = !!value;
}
@synthesize detail;
- (BOOL) hasUgc {
  return !!hasUgc_;
}
- (void) setHasUgc:(BOOL) value {
  hasUgc_ = !!value;
}
@synthesize ugc;
- (BOOL) hasRec {
  return !!hasRec_;
}
- (void) setHasRec:(BOOL) value {
  hasRec_ = !!value;
}
@synthesize rec;
@synthesize dishesArray;
@dynamic dishes;
- (BOOL) hasSelected {
  return !!hasSelected_;
}
- (void) setHasSelected:(BOOL) value {
  hasSelected_ = !!value;
}
@synthesize selected;
- (void) dealloc {
  self.brief = nil;
  self.detail = nil;
  self.ugc = nil;
  self.rec = nil;
  self.dishesArray = nil;
  self.selected = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.brief = [MsgRestBrief defaultInstance];
    self.detail = [MsgRestDetail defaultInstance];
    self.ugc = [MsgRestUgc defaultInstance];
    self.rec = [MsgRestRecommend defaultInstance];
    self.selected = [MsgEditorSelected defaultInstance];
  }
  return self;
}
static MsgRestInfo* defaultMsgRestInfoInstance = nil;
+ (void) initialize {
  if (self == [MsgRestInfo class]) {
    defaultMsgRestInfoInstance = [[MsgRestInfo alloc] init];
  }
}
+ (MsgRestInfo*) defaultInstance {
  return defaultMsgRestInfoInstance;
}
- (MsgRestInfo*) defaultInstance {
  return defaultMsgRestInfoInstance;
}
- (PBArray *)dishes {
  return dishesArray;
}
- (MsgDish*)dishesAtIndex:(NSUInteger)index {
  return [dishesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasBrief) {
    if (!self.brief.isInitialized) {
      return NO;
    }
  }
  if (self.hasRec) {
    if (!self.rec.isInitialized) {
      return NO;
    }
  }
  for (MsgDish* element in self.dishes) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBrief) {
    [output writeMessage:1 value:self.brief];
  }
  if (self.hasDetail) {
    [output writeMessage:2 value:self.detail];
  }
  if (self.hasUgc) {
    [output writeMessage:3 value:self.ugc];
  }
  if (self.hasRec) {
    [output writeMessage:4 value:self.rec];
  }
  for (MsgDish *element in self.dishesArray) {
    [output writeMessage:5 value:element];
  }
  if (self.hasSelected) {
    [output writeMessage:6 value:self.selected];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasBrief) {
    size += computeMessageSize(1, self.brief);
  }
  if (self.hasDetail) {
    size += computeMessageSize(2, self.detail);
  }
  if (self.hasUgc) {
    size += computeMessageSize(3, self.ugc);
  }
  if (self.hasRec) {
    size += computeMessageSize(4, self.rec);
  }
  for (MsgDish *element in self.dishesArray) {
    size += computeMessageSize(5, element);
  }
  if (self.hasSelected) {
    size += computeMessageSize(6, self.selected);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRestInfo*) parseFromData:(NSData*) data {
  return (MsgRestInfo*)[[[MsgRestInfo builder] mergeFromData:data] build];
}
+ (MsgRestInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestInfo*)[[[MsgRestInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRestInfo*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRestInfo*)[[[MsgRestInfo builder] mergeFromInputStream:input] build];
}
+ (MsgRestInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestInfo*)[[[MsgRestInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRestInfo*)[[[MsgRestInfo builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRestInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestInfo*)[[[MsgRestInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestInfo_Builder*) builder {
  return [[[MsgRestInfo_Builder alloc] init] autorelease];
}
+ (MsgRestInfo_Builder*) builderWithPrototype:(MsgRestInfo*) prototype {
  return [[MsgRestInfo builder] mergeFrom:prototype];
}
- (MsgRestInfo_Builder*) builder {
  return [MsgRestInfo builder];
}
@end

@interface MsgRestInfo_Builder()
@property (retain) MsgRestInfo* result;
@end

@implementation MsgRestInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRestInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRestInfo_Builder*) clear {
  self.result = [[[MsgRestInfo alloc] init] autorelease];
  return self;
}
- (MsgRestInfo_Builder*) clone {
  return [MsgRestInfo builderWithPrototype:result];
}
- (MsgRestInfo*) defaultInstance {
  return [MsgRestInfo defaultInstance];
}
- (MsgRestInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRestInfo*) buildPartial {
  MsgRestInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRestInfo_Builder*) mergeFrom:(MsgRestInfo*) other {
  if (other == [MsgRestInfo defaultInstance]) {
    return self;
  }
  if (other.hasBrief) {
    [self mergeBrief:other.brief];
  }
  if (other.hasDetail) {
    [self mergeDetail:other.detail];
  }
  if (other.hasUgc) {
    [self mergeUgc:other.ugc];
  }
  if (other.hasRec) {
    [self mergeRec:other.rec];
  }
  if (other.dishesArray.count > 0) {
    if (result.dishesArray == nil) {
      result.dishesArray = [[other.dishesArray copyWithZone:[other.dishesArray zone]] autorelease];
    } else {
      [result.dishesArray appendArray:other.dishesArray];
    }
  }
  if (other.hasSelected) {
    [self mergeSelected:other.selected];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRestInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRestInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgRestBrief_Builder* subBuilder = [MsgRestBrief builder];
        if (self.hasBrief) {
          [subBuilder mergeFrom:self.brief];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBrief:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MsgRestDetail_Builder* subBuilder = [MsgRestDetail builder];
        if (self.hasDetail) {
          [subBuilder mergeFrom:self.detail];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDetail:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        MsgRestUgc_Builder* subBuilder = [MsgRestUgc builder];
        if (self.hasUgc) {
          [subBuilder mergeFrom:self.ugc];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUgc:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        MsgRestRecommend_Builder* subBuilder = [MsgRestRecommend builder];
        if (self.hasRec) {
          [subBuilder mergeFrom:self.rec];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRec:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        MsgDish_Builder* subBuilder = [MsgDish builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDishes:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        MsgEditorSelected_Builder* subBuilder = [MsgEditorSelected builder];
        if (self.hasSelected) {
          [subBuilder mergeFrom:self.selected];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSelected:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBrief {
  return result.hasBrief;
}
- (MsgRestBrief*) brief {
  return result.brief;
}
- (MsgRestInfo_Builder*) setBrief:(MsgRestBrief*) value {
  result.hasBrief = YES;
  result.brief = value;
  return self;
}
- (MsgRestInfo_Builder*) setBriefBuilder:(MsgRestBrief_Builder*) builderForValue {
  return [self setBrief:[builderForValue build]];
}
- (MsgRestInfo_Builder*) mergeBrief:(MsgRestBrief*) value {
  if (result.hasBrief &&
      result.brief != [MsgRestBrief defaultInstance]) {
    result.brief =
      [[[MsgRestBrief builderWithPrototype:result.brief] mergeFrom:value] buildPartial];
  } else {
    result.brief = value;
  }
  result.hasBrief = YES;
  return self;
}
- (MsgRestInfo_Builder*) clearBrief {
  result.hasBrief = NO;
  result.brief = [MsgRestBrief defaultInstance];
  return self;
}
- (BOOL) hasDetail {
  return result.hasDetail;
}
- (MsgRestDetail*) detail {
  return result.detail;
}
- (MsgRestInfo_Builder*) setDetail:(MsgRestDetail*) value {
  result.hasDetail = YES;
  result.detail = value;
  return self;
}
- (MsgRestInfo_Builder*) setDetailBuilder:(MsgRestDetail_Builder*) builderForValue {
  return [self setDetail:[builderForValue build]];
}
- (MsgRestInfo_Builder*) mergeDetail:(MsgRestDetail*) value {
  if (result.hasDetail &&
      result.detail != [MsgRestDetail defaultInstance]) {
    result.detail =
      [[[MsgRestDetail builderWithPrototype:result.detail] mergeFrom:value] buildPartial];
  } else {
    result.detail = value;
  }
  result.hasDetail = YES;
  return self;
}
- (MsgRestInfo_Builder*) clearDetail {
  result.hasDetail = NO;
  result.detail = [MsgRestDetail defaultInstance];
  return self;
}
- (BOOL) hasUgc {
  return result.hasUgc;
}
- (MsgRestUgc*) ugc {
  return result.ugc;
}
- (MsgRestInfo_Builder*) setUgc:(MsgRestUgc*) value {
  result.hasUgc = YES;
  result.ugc = value;
  return self;
}
- (MsgRestInfo_Builder*) setUgcBuilder:(MsgRestUgc_Builder*) builderForValue {
  return [self setUgc:[builderForValue build]];
}
- (MsgRestInfo_Builder*) mergeUgc:(MsgRestUgc*) value {
  if (result.hasUgc &&
      result.ugc != [MsgRestUgc defaultInstance]) {
    result.ugc =
      [[[MsgRestUgc builderWithPrototype:result.ugc] mergeFrom:value] buildPartial];
  } else {
    result.ugc = value;
  }
  result.hasUgc = YES;
  return self;
}
- (MsgRestInfo_Builder*) clearUgc {
  result.hasUgc = NO;
  result.ugc = [MsgRestUgc defaultInstance];
  return self;
}
- (BOOL) hasRec {
  return result.hasRec;
}
- (MsgRestRecommend*) rec {
  return result.rec;
}
- (MsgRestInfo_Builder*) setRec:(MsgRestRecommend*) value {
  result.hasRec = YES;
  result.rec = value;
  return self;
}
- (MsgRestInfo_Builder*) setRecBuilder:(MsgRestRecommend_Builder*) builderForValue {
  return [self setRec:[builderForValue build]];
}
- (MsgRestInfo_Builder*) mergeRec:(MsgRestRecommend*) value {
  if (result.hasRec &&
      result.rec != [MsgRestRecommend defaultInstance]) {
    result.rec =
      [[[MsgRestRecommend builderWithPrototype:result.rec] mergeFrom:value] buildPartial];
  } else {
    result.rec = value;
  }
  result.hasRec = YES;
  return self;
}
- (MsgRestInfo_Builder*) clearRec {
  result.hasRec = NO;
  result.rec = [MsgRestRecommend defaultInstance];
  return self;
}
- (PBAppendableArray *)dishes {
  return result.dishesArray;
}
- (MsgDish*)dishesAtIndex:(NSUInteger)index {
  return [result dishesAtIndex:index];
}
- (MsgRestInfo_Builder *)addDishes:(MsgDish*)value {
  if (result.dishesArray == nil) {
    result.dishesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.dishesArray addObject:value];
  return self;
}
- (MsgRestInfo_Builder *)setDishesArray:(NSArray *)array {
  result.dishesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestInfo_Builder *)setDishesValues:(const MsgDish* *)values count:(NSUInteger)count {
  result.dishesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestInfo_Builder *)clearDishes {
  result.dishesArray = nil;
  return self;
}
- (BOOL) hasSelected {
  return result.hasSelected;
}
- (MsgEditorSelected*) selected {
  return result.selected;
}
- (MsgRestInfo_Builder*) setSelected:(MsgEditorSelected*) value {
  result.hasSelected = YES;
  result.selected = value;
  return self;
}
- (MsgRestInfo_Builder*) setSelectedBuilder:(MsgEditorSelected_Builder*) builderForValue {
  return [self setSelected:[builderForValue build]];
}
- (MsgRestInfo_Builder*) mergeSelected:(MsgEditorSelected*) value {
  if (result.hasSelected &&
      result.selected != [MsgEditorSelected defaultInstance]) {
    result.selected =
      [[[MsgEditorSelected builderWithPrototype:result.selected] mergeFrom:value] buildPartial];
  } else {
    result.selected = value;
  }
  result.hasSelected = YES;
  return self;
}
- (MsgRestInfo_Builder*) clearSelected {
  result.hasSelected = NO;
  result.selected = [MsgEditorSelected defaultInstance];
  return self;
}
@end

@interface MsgRestInfos ()
@property (retain) PBAppendableArray * restsArray;
@end

@implementation MsgRestInfos

@synthesize restsArray;
@dynamic rests;
- (void) dealloc {
  self.restsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgRestInfos* defaultMsgRestInfosInstance = nil;
+ (void) initialize {
  if (self == [MsgRestInfos class]) {
    defaultMsgRestInfosInstance = [[MsgRestInfos alloc] init];
  }
}
+ (MsgRestInfos*) defaultInstance {
  return defaultMsgRestInfosInstance;
}
- (MsgRestInfos*) defaultInstance {
  return defaultMsgRestInfosInstance;
}
- (PBArray *)rests {
  return restsArray;
}
- (MsgRestInfo*)restsAtIndex:(NSUInteger)index {
  return [restsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (MsgRestInfo* element in self.rests) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MsgRestInfo *element in self.restsArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MsgRestInfo *element in self.restsArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRestInfos*) parseFromData:(NSData*) data {
  return (MsgRestInfos*)[[[MsgRestInfos builder] mergeFromData:data] build];
}
+ (MsgRestInfos*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestInfos*)[[[MsgRestInfos builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRestInfos*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRestInfos*)[[[MsgRestInfos builder] mergeFromInputStream:input] build];
}
+ (MsgRestInfos*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestInfos*)[[[MsgRestInfos builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestInfos*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRestInfos*)[[[MsgRestInfos builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRestInfos*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestInfos*)[[[MsgRestInfos builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestInfos_Builder*) builder {
  return [[[MsgRestInfos_Builder alloc] init] autorelease];
}
+ (MsgRestInfos_Builder*) builderWithPrototype:(MsgRestInfos*) prototype {
  return [[MsgRestInfos builder] mergeFrom:prototype];
}
- (MsgRestInfos_Builder*) builder {
  return [MsgRestInfos builder];
}
@end

@interface MsgRestInfos_Builder()
@property (retain) MsgRestInfos* result;
@end

@implementation MsgRestInfos_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRestInfos alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRestInfos_Builder*) clear {
  self.result = [[[MsgRestInfos alloc] init] autorelease];
  return self;
}
- (MsgRestInfos_Builder*) clone {
  return [MsgRestInfos builderWithPrototype:result];
}
- (MsgRestInfos*) defaultInstance {
  return [MsgRestInfos defaultInstance];
}
- (MsgRestInfos*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRestInfos*) buildPartial {
  MsgRestInfos* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRestInfos_Builder*) mergeFrom:(MsgRestInfos*) other {
  if (other == [MsgRestInfos defaultInstance]) {
    return self;
  }
  if (other.restsArray.count > 0) {
    if (result.restsArray == nil) {
      result.restsArray = [[other.restsArray copyWithZone:[other.restsArray zone]] autorelease];
    } else {
      [result.restsArray appendArray:other.restsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRestInfos_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRestInfos_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgRestInfo_Builder* subBuilder = [MsgRestInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRests:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)rests {
  return result.restsArray;
}
- (MsgRestInfo*)restsAtIndex:(NSUInteger)index {
  return [result restsAtIndex:index];
}
- (MsgRestInfos_Builder *)addRests:(MsgRestInfo*)value {
  if (result.restsArray == nil) {
    result.restsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.restsArray addObject:value];
  return self;
}
- (MsgRestInfos_Builder *)setRestsArray:(NSArray *)array {
  result.restsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestInfos_Builder *)setRestsValues:(const MsgRestInfo* *)values count:(NSUInteger)count {
  result.restsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestInfos_Builder *)clearRests {
  result.restsArray = nil;
  return self;
}
@end

@interface MsgRestComment ()
@property int64_t commentId;
@property int64_t restaurantId;
@property int64_t userId;
@property (retain) NSString* userName;
@property int64_t userImage;
@property (retain) NSString* content;
@property Float32 rate;
@property int64_t time;
@property Float32 avgPay;
@end

@implementation MsgRestComment

- (BOOL) hasCommentId {
  return !!hasCommentId_;
}
- (void) setHasCommentId:(BOOL) value {
  hasCommentId_ = !!value;
}
@synthesize commentId;
- (BOOL) hasRestaurantId {
  return !!hasRestaurantId_;
}
- (void) setHasRestaurantId:(BOOL) value {
  hasRestaurantId_ = !!value;
}
@synthesize restaurantId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value {
  hasUserName_ = !!value;
}
@synthesize userName;
- (BOOL) hasUserImage {
  return !!hasUserImage_;
}
- (void) setHasUserImage:(BOOL) value {
  hasUserImage_ = !!value;
}
@synthesize userImage;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (BOOL) hasRate {
  return !!hasRate_;
}
- (void) setHasRate:(BOOL) value {
  hasRate_ = !!value;
}
@synthesize rate;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) value {
  hasTime_ = !!value;
}
@synthesize time;
- (BOOL) hasAvgPay {
  return !!hasAvgPay_;
}
- (void) setHasAvgPay:(BOOL) value {
  hasAvgPay_ = !!value;
}
@synthesize avgPay;
- (void) dealloc {
  self.userName = nil;
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.commentId = 0L;
    self.restaurantId = 0L;
    self.userId = 0L;
    self.userName = @"";
    self.userImage = 0L;
    self.content = @"";
    self.rate = 0;
    self.time = 0L;
    self.avgPay = 0;
  }
  return self;
}
static MsgRestComment* defaultMsgRestCommentInstance = nil;
+ (void) initialize {
  if (self == [MsgRestComment class]) {
    defaultMsgRestCommentInstance = [[MsgRestComment alloc] init];
  }
}
+ (MsgRestComment*) defaultInstance {
  return defaultMsgRestCommentInstance;
}
- (MsgRestComment*) defaultInstance {
  return defaultMsgRestCommentInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCommentId) {
    return NO;
  }
  if (!self.hasRestaurantId) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommentId) {
    [output writeInt64:1 value:self.commentId];
  }
  if (self.hasRestaurantId) {
    [output writeInt64:2 value:self.restaurantId];
  }
  if (self.hasUserId) {
    [output writeInt64:3 value:self.userId];
  }
  if (self.hasUserName) {
    [output writeString:4 value:self.userName];
  }
  if (self.hasUserImage) {
    [output writeInt64:5 value:self.userImage];
  }
  if (self.hasContent) {
    [output writeString:6 value:self.content];
  }
  if (self.hasRate) {
    [output writeFloat:7 value:self.rate];
  }
  if (self.hasTime) {
    [output writeInt64:8 value:self.time];
  }
  if (self.hasAvgPay) {
    [output writeFloat:9 value:self.avgPay];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCommentId) {
    size += computeInt64Size(1, self.commentId);
  }
  if (self.hasRestaurantId) {
    size += computeInt64Size(2, self.restaurantId);
  }
  if (self.hasUserId) {
    size += computeInt64Size(3, self.userId);
  }
  if (self.hasUserName) {
    size += computeStringSize(4, self.userName);
  }
  if (self.hasUserImage) {
    size += computeInt64Size(5, self.userImage);
  }
  if (self.hasContent) {
    size += computeStringSize(6, self.content);
  }
  if (self.hasRate) {
    size += computeFloatSize(7, self.rate);
  }
  if (self.hasTime) {
    size += computeInt64Size(8, self.time);
  }
  if (self.hasAvgPay) {
    size += computeFloatSize(9, self.avgPay);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRestComment*) parseFromData:(NSData*) data {
  return (MsgRestComment*)[[[MsgRestComment builder] mergeFromData:data] build];
}
+ (MsgRestComment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestComment*)[[[MsgRestComment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRestComment*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRestComment*)[[[MsgRestComment builder] mergeFromInputStream:input] build];
}
+ (MsgRestComment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestComment*)[[[MsgRestComment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestComment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRestComment*)[[[MsgRestComment builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRestComment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestComment*)[[[MsgRestComment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestComment_Builder*) builder {
  return [[[MsgRestComment_Builder alloc] init] autorelease];
}
+ (MsgRestComment_Builder*) builderWithPrototype:(MsgRestComment*) prototype {
  return [[MsgRestComment builder] mergeFrom:prototype];
}
- (MsgRestComment_Builder*) builder {
  return [MsgRestComment builder];
}
@end

@interface MsgRestComment_Builder()
@property (retain) MsgRestComment* result;
@end

@implementation MsgRestComment_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRestComment alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRestComment_Builder*) clear {
  self.result = [[[MsgRestComment alloc] init] autorelease];
  return self;
}
- (MsgRestComment_Builder*) clone {
  return [MsgRestComment builderWithPrototype:result];
}
- (MsgRestComment*) defaultInstance {
  return [MsgRestComment defaultInstance];
}
- (MsgRestComment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRestComment*) buildPartial {
  MsgRestComment* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRestComment_Builder*) mergeFrom:(MsgRestComment*) other {
  if (other == [MsgRestComment defaultInstance]) {
    return self;
  }
  if (other.hasCommentId) {
    [self setCommentId:other.commentId];
  }
  if (other.hasRestaurantId) {
    [self setRestaurantId:other.restaurantId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasUserImage) {
    [self setUserImage:other.userImage];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasRate) {
    [self setRate:other.rate];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasAvgPay) {
    [self setAvgPay:other.avgPay];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRestComment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRestComment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCommentId:[input readInt64]];
        break;
      }
      case 16: {
        [self setRestaurantId:[input readInt64]];
        break;
      }
      case 24: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 34: {
        [self setUserName:[input readString]];
        break;
      }
      case 40: {
        [self setUserImage:[input readInt64]];
        break;
      }
      case 50: {
        [self setContent:[input readString]];
        break;
      }
      case 61: {
        [self setRate:[input readFloat]];
        break;
      }
      case 64: {
        [self setTime:[input readInt64]];
        break;
      }
      case 77: {
        [self setAvgPay:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasCommentId {
  return result.hasCommentId;
}
- (int64_t) commentId {
  return result.commentId;
}
- (MsgRestComment_Builder*) setCommentId:(int64_t) value {
  result.hasCommentId = YES;
  result.commentId = value;
  return self;
}
- (MsgRestComment_Builder*) clearCommentId {
  result.hasCommentId = NO;
  result.commentId = 0L;
  return self;
}
- (BOOL) hasRestaurantId {
  return result.hasRestaurantId;
}
- (int64_t) restaurantId {
  return result.restaurantId;
}
- (MsgRestComment_Builder*) setRestaurantId:(int64_t) value {
  result.hasRestaurantId = YES;
  result.restaurantId = value;
  return self;
}
- (MsgRestComment_Builder*) clearRestaurantId {
  result.hasRestaurantId = NO;
  result.restaurantId = 0L;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int64_t) userId {
  return result.userId;
}
- (MsgRestComment_Builder*) setUserId:(int64_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MsgRestComment_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0L;
  return self;
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (MsgRestComment_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (MsgRestComment_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
- (BOOL) hasUserImage {
  return result.hasUserImage;
}
- (int64_t) userImage {
  return result.userImage;
}
- (MsgRestComment_Builder*) setUserImage:(int64_t) value {
  result.hasUserImage = YES;
  result.userImage = value;
  return self;
}
- (MsgRestComment_Builder*) clearUserImage {
  result.hasUserImage = NO;
  result.userImage = 0L;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (MsgRestComment_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (MsgRestComment_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasRate {
  return result.hasRate;
}
- (Float32) rate {
  return result.rate;
}
- (MsgRestComment_Builder*) setRate:(Float32) value {
  result.hasRate = YES;
  result.rate = value;
  return self;
}
- (MsgRestComment_Builder*) clearRate {
  result.hasRate = NO;
  result.rate = 0;
  return self;
}
- (BOOL) hasTime {
  return result.hasTime;
}
- (int64_t) time {
  return result.time;
}
- (MsgRestComment_Builder*) setTime:(int64_t) value {
  result.hasTime = YES;
  result.time = value;
  return self;
}
- (MsgRestComment_Builder*) clearTime {
  result.hasTime = NO;
  result.time = 0L;
  return self;
}
- (BOOL) hasAvgPay {
  return result.hasAvgPay;
}
- (Float32) avgPay {
  return result.avgPay;
}
- (MsgRestComment_Builder*) setAvgPay:(Float32) value {
  result.hasAvgPay = YES;
  result.avgPay = value;
  return self;
}
- (MsgRestComment_Builder*) clearAvgPay {
  result.hasAvgPay = NO;
  result.avgPay = 0;
  return self;
}
@end

@interface MsgRestComments ()
@property (retain) PBAppendableArray * commentsArray;
@end

@implementation MsgRestComments

@synthesize commentsArray;
@dynamic comments;
- (void) dealloc {
  self.commentsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgRestComments* defaultMsgRestCommentsInstance = nil;
+ (void) initialize {
  if (self == [MsgRestComments class]) {
    defaultMsgRestCommentsInstance = [[MsgRestComments alloc] init];
  }
}
+ (MsgRestComments*) defaultInstance {
  return defaultMsgRestCommentsInstance;
}
- (MsgRestComments*) defaultInstance {
  return defaultMsgRestCommentsInstance;
}
- (PBArray *)comments {
  return commentsArray;
}
- (MsgRestComment*)commentsAtIndex:(NSUInteger)index {
  return [commentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (MsgRestComment* element in self.comments) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MsgRestComment *element in self.commentsArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MsgRestComment *element in self.commentsArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRestComments*) parseFromData:(NSData*) data {
  return (MsgRestComments*)[[[MsgRestComments builder] mergeFromData:data] build];
}
+ (MsgRestComments*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestComments*)[[[MsgRestComments builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRestComments*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRestComments*)[[[MsgRestComments builder] mergeFromInputStream:input] build];
}
+ (MsgRestComments*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestComments*)[[[MsgRestComments builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestComments*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRestComments*)[[[MsgRestComments builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRestComments*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRestComments*)[[[MsgRestComments builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRestComments_Builder*) builder {
  return [[[MsgRestComments_Builder alloc] init] autorelease];
}
+ (MsgRestComments_Builder*) builderWithPrototype:(MsgRestComments*) prototype {
  return [[MsgRestComments builder] mergeFrom:prototype];
}
- (MsgRestComments_Builder*) builder {
  return [MsgRestComments builder];
}
@end

@interface MsgRestComments_Builder()
@property (retain) MsgRestComments* result;
@end

@implementation MsgRestComments_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRestComments alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRestComments_Builder*) clear {
  self.result = [[[MsgRestComments alloc] init] autorelease];
  return self;
}
- (MsgRestComments_Builder*) clone {
  return [MsgRestComments builderWithPrototype:result];
}
- (MsgRestComments*) defaultInstance {
  return [MsgRestComments defaultInstance];
}
- (MsgRestComments*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRestComments*) buildPartial {
  MsgRestComments* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRestComments_Builder*) mergeFrom:(MsgRestComments*) other {
  if (other == [MsgRestComments defaultInstance]) {
    return self;
  }
  if (other.commentsArray.count > 0) {
    if (result.commentsArray == nil) {
      result.commentsArray = [[other.commentsArray copyWithZone:[other.commentsArray zone]] autorelease];
    } else {
      [result.commentsArray appendArray:other.commentsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRestComments_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRestComments_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgRestComment_Builder* subBuilder = [MsgRestComment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addComments:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)comments {
  return result.commentsArray;
}
- (MsgRestComment*)commentsAtIndex:(NSUInteger)index {
  return [result commentsAtIndex:index];
}
- (MsgRestComments_Builder *)addComments:(MsgRestComment*)value {
  if (result.commentsArray == nil) {
    result.commentsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.commentsArray addObject:value];
  return self;
}
- (MsgRestComments_Builder *)setCommentsArray:(NSArray *)array {
  result.commentsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestComments_Builder *)setCommentsValues:(const MsgRestComment* *)values count:(NSUInteger)count {
  result.commentsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRestComments_Builder *)clearComments {
  result.commentsArray = nil;
  return self;
}
@end

@interface MsgBindingAcccount ()
@property int32_t type;
@property (retain) NSString* id;
@end

@implementation MsgBindingAcccount

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (void) dealloc {
  self.id = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = 0;
    self.id = @"";
  }
  return self;
}
static MsgBindingAcccount* defaultMsgBindingAcccountInstance = nil;
+ (void) initialize {
  if (self == [MsgBindingAcccount class]) {
    defaultMsgBindingAcccountInstance = [[MsgBindingAcccount alloc] init];
  }
}
+ (MsgBindingAcccount*) defaultInstance {
  return defaultMsgBindingAcccountInstance;
}
- (MsgBindingAcccount*) defaultInstance {
  return defaultMsgBindingAcccountInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasId) {
    [output writeString:2 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeInt32Size(1, self.type);
  }
  if (self.hasId) {
    size += computeStringSize(2, self.id);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgBindingAcccount*) parseFromData:(NSData*) data {
  return (MsgBindingAcccount*)[[[MsgBindingAcccount builder] mergeFromData:data] build];
}
+ (MsgBindingAcccount*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBindingAcccount*)[[[MsgBindingAcccount builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgBindingAcccount*) parseFromInputStream:(NSInputStream*) input {
  return (MsgBindingAcccount*)[[[MsgBindingAcccount builder] mergeFromInputStream:input] build];
}
+ (MsgBindingAcccount*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBindingAcccount*)[[[MsgBindingAcccount builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgBindingAcccount*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgBindingAcccount*)[[[MsgBindingAcccount builder] mergeFromCodedInputStream:input] build];
}
+ (MsgBindingAcccount*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBindingAcccount*)[[[MsgBindingAcccount builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgBindingAcccount_Builder*) builder {
  return [[[MsgBindingAcccount_Builder alloc] init] autorelease];
}
+ (MsgBindingAcccount_Builder*) builderWithPrototype:(MsgBindingAcccount*) prototype {
  return [[MsgBindingAcccount builder] mergeFrom:prototype];
}
- (MsgBindingAcccount_Builder*) builder {
  return [MsgBindingAcccount builder];
}
@end

@interface MsgBindingAcccount_Builder()
@property (retain) MsgBindingAcccount* result;
@end

@implementation MsgBindingAcccount_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgBindingAcccount alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgBindingAcccount_Builder*) clear {
  self.result = [[[MsgBindingAcccount alloc] init] autorelease];
  return self;
}
- (MsgBindingAcccount_Builder*) clone {
  return [MsgBindingAcccount builderWithPrototype:result];
}
- (MsgBindingAcccount*) defaultInstance {
  return [MsgBindingAcccount defaultInstance];
}
- (MsgBindingAcccount*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgBindingAcccount*) buildPartial {
  MsgBindingAcccount* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgBindingAcccount_Builder*) mergeFrom:(MsgBindingAcccount*) other {
  if (other == [MsgBindingAcccount defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgBindingAcccount_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgBindingAcccount_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 18: {
        [self setId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (MsgBindingAcccount_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (MsgBindingAcccount_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (MsgBindingAcccount_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (MsgBindingAcccount_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
@end

@interface MsgUserInfo ()
@property int64_t id;
@property (retain) NSString* name;
@property int64_t createTime;
@property (retain) PBAppendableArray * bindingsArray;
@property (retain) NSString* home;
@property (retain) NSString* company;
@property TrafficMode trafficMode;
@property (retain) PBAppendableArray * areasArray;
@property int32_t ratecount;
@property int32_t favorcount;
@end

@implementation MsgUserInfo

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value {
  hasCreateTime_ = !!value;
}
@synthesize createTime;
@synthesize bindingsArray;
@dynamic bindings;
- (BOOL) hasHome {
  return !!hasHome_;
}
- (void) setHasHome:(BOOL) value {
  hasHome_ = !!value;
}
@synthesize home;
- (BOOL) hasCompany {
  return !!hasCompany_;
}
- (void) setHasCompany:(BOOL) value {
  hasCompany_ = !!value;
}
@synthesize company;
- (BOOL) hasTrafficMode {
  return !!hasTrafficMode_;
}
- (void) setHasTrafficMode:(BOOL) value {
  hasTrafficMode_ = !!value;
}
@synthesize trafficMode;
@synthesize areasArray;
@dynamic areas;
- (BOOL) hasRatecount {
  return !!hasRatecount_;
}
- (void) setHasRatecount:(BOOL) value {
  hasRatecount_ = !!value;
}
@synthesize ratecount;
- (BOOL) hasFavorcount {
  return !!hasFavorcount_;
}
- (void) setHasFavorcount:(BOOL) value {
  hasFavorcount_ = !!value;
}
@synthesize favorcount;
- (void) dealloc {
  self.name = nil;
  self.bindingsArray = nil;
  self.home = nil;
  self.company = nil;
  self.areasArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.createTime = 0L;
    self.home = @"";
    self.company = @"";
    self.trafficMode = TrafficModeInvalidMode;
    self.ratecount = 0;
    self.favorcount = 0;
  }
  return self;
}
static MsgUserInfo* defaultMsgUserInfoInstance = nil;
+ (void) initialize {
  if (self == [MsgUserInfo class]) {
    defaultMsgUserInfoInstance = [[MsgUserInfo alloc] init];
  }
}
+ (MsgUserInfo*) defaultInstance {
  return defaultMsgUserInfoInstance;
}
- (MsgUserInfo*) defaultInstance {
  return defaultMsgUserInfoInstance;
}
- (PBArray *)bindings {
  return bindingsArray;
}
- (MsgBindingAcccount*)bindingsAtIndex:(NSUInteger)index {
  return [bindingsArray objectAtIndex:index];
}
- (PBArray *)areas {
  return areasArray;
}
- (NSString*)areasAtIndex:(NSUInteger)index {
  return [areasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasCreateTime) {
    return NO;
  }
  for (MsgBindingAcccount* element in self.bindings) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCreateTime) {
    [output writeInt64:3 value:self.createTime];
  }
  for (MsgBindingAcccount *element in self.bindingsArray) {
    [output writeMessage:4 value:element];
  }
  if (self.hasHome) {
    [output writeString:5 value:self.home];
  }
  if (self.hasCompany) {
    [output writeString:6 value:self.company];
  }
  if (self.hasTrafficMode) {
    [output writeEnum:7 value:self.trafficMode];
  }
  const NSUInteger areasArrayCount = self.areasArray.count;
  if (areasArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.areasArray.data;
    for (NSUInteger i = 0; i < areasArrayCount; ++i) {
      [output writeString:8 value:values[i]];
    }
  }
  if (self.hasRatecount) {
    [output writeInt32:9 value:self.ratecount];
  }
  if (self.hasFavorcount) {
    [output writeInt32:10 value:self.favorcount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasCreateTime) {
    size += computeInt64Size(3, self.createTime);
  }
  for (MsgBindingAcccount *element in self.bindingsArray) {
    size += computeMessageSize(4, element);
  }
  if (self.hasHome) {
    size += computeStringSize(5, self.home);
  }
  if (self.hasCompany) {
    size += computeStringSize(6, self.company);
  }
  if (self.hasTrafficMode) {
    size += computeEnumSize(7, self.trafficMode);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.areasArray.count;
    const NSString* *values = (const NSString* *)self.areasArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size += dataSize;
    size += 1 * count;
  }
  if (self.hasRatecount) {
    size += computeInt32Size(9, self.ratecount);
  }
  if (self.hasFavorcount) {
    size += computeInt32Size(10, self.favorcount);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgUserInfo*) parseFromData:(NSData*) data {
  return (MsgUserInfo*)[[[MsgUserInfo builder] mergeFromData:data] build];
}
+ (MsgUserInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgUserInfo*)[[[MsgUserInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgUserInfo*) parseFromInputStream:(NSInputStream*) input {
  return (MsgUserInfo*)[[[MsgUserInfo builder] mergeFromInputStream:input] build];
}
+ (MsgUserInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgUserInfo*)[[[MsgUserInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgUserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgUserInfo*)[[[MsgUserInfo builder] mergeFromCodedInputStream:input] build];
}
+ (MsgUserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgUserInfo*)[[[MsgUserInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgUserInfo_Builder*) builder {
  return [[[MsgUserInfo_Builder alloc] init] autorelease];
}
+ (MsgUserInfo_Builder*) builderWithPrototype:(MsgUserInfo*) prototype {
  return [[MsgUserInfo builder] mergeFrom:prototype];
}
- (MsgUserInfo_Builder*) builder {
  return [MsgUserInfo builder];
}
@end

@interface MsgUserInfo_Builder()
@property (retain) MsgUserInfo* result;
@end

@implementation MsgUserInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgUserInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgUserInfo_Builder*) clear {
  self.result = [[[MsgUserInfo alloc] init] autorelease];
  return self;
}
- (MsgUserInfo_Builder*) clone {
  return [MsgUserInfo builderWithPrototype:result];
}
- (MsgUserInfo*) defaultInstance {
  return [MsgUserInfo defaultInstance];
}
- (MsgUserInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgUserInfo*) buildPartial {
  MsgUserInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgUserInfo_Builder*) mergeFrom:(MsgUserInfo*) other {
  if (other == [MsgUserInfo defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.bindingsArray.count > 0) {
    if (result.bindingsArray == nil) {
      result.bindingsArray = [[other.bindingsArray copyWithZone:[other.bindingsArray zone]] autorelease];
    } else {
      [result.bindingsArray appendArray:other.bindingsArray];
    }
  }
  if (other.hasHome) {
    [self setHome:other.home];
  }
  if (other.hasCompany) {
    [self setCompany:other.company];
  }
  if (other.hasTrafficMode) {
    [self setTrafficMode:other.trafficMode];
  }
  if (other.areasArray.count > 0) {
    if (result.areasArray == nil) {
      result.areasArray = [[other.areasArray copyWithZone:[other.areasArray zone]] autorelease];
    } else {
      [result.areasArray appendArray:other.areasArray];
    }
  }
  if (other.hasRatecount) {
    [self setRatecount:other.ratecount];
  }
  if (other.hasFavorcount) {
    [self setFavorcount:other.favorcount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgUserInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgUserInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 34: {
        MsgBindingAcccount_Builder* subBuilder = [MsgBindingAcccount builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBindings:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setHome:[input readString]];
        break;
      }
      case 50: {
        [self setCompany:[input readString]];
        break;
      }
      case 56: {
        int32_t value = [input readEnum];
        if (TrafficModeIsValidValue(value)) {
          [self setTrafficMode:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 66: {
        [self addAreas:[input readString]];
        break;
      }
      case 72: {
        [self setRatecount:[input readInt32]];
        break;
      }
      case 80: {
        [self setFavorcount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int64_t) id {
  return result.id;
}
- (MsgUserInfo_Builder*) setId:(int64_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (MsgUserInfo_Builder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MsgUserInfo_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MsgUserInfo_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (int64_t) createTime {
  return result.createTime;
}
- (MsgUserInfo_Builder*) setCreateTime:(int64_t) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (MsgUserInfo_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0L;
  return self;
}
- (PBAppendableArray *)bindings {
  return result.bindingsArray;
}
- (MsgBindingAcccount*)bindingsAtIndex:(NSUInteger)index {
  return [result bindingsAtIndex:index];
}
- (MsgUserInfo_Builder *)addBindings:(MsgBindingAcccount*)value {
  if (result.bindingsArray == nil) {
    result.bindingsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.bindingsArray addObject:value];
  return self;
}
- (MsgUserInfo_Builder *)setBindingsArray:(NSArray *)array {
  result.bindingsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgUserInfo_Builder *)setBindingsValues:(const MsgBindingAcccount* *)values count:(NSUInteger)count {
  result.bindingsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgUserInfo_Builder *)clearBindings {
  result.bindingsArray = nil;
  return self;
}
- (BOOL) hasHome {
  return result.hasHome;
}
- (NSString*) home {
  return result.home;
}
- (MsgUserInfo_Builder*) setHome:(NSString*) value {
  result.hasHome = YES;
  result.home = value;
  return self;
}
- (MsgUserInfo_Builder*) clearHome {
  result.hasHome = NO;
  result.home = @"";
  return self;
}
- (BOOL) hasCompany {
  return result.hasCompany;
}
- (NSString*) company {
  return result.company;
}
- (MsgUserInfo_Builder*) setCompany:(NSString*) value {
  result.hasCompany = YES;
  result.company = value;
  return self;
}
- (MsgUserInfo_Builder*) clearCompany {
  result.hasCompany = NO;
  result.company = @"";
  return self;
}
- (BOOL) hasTrafficMode {
  return result.hasTrafficMode;
}
- (TrafficMode) trafficMode {
  return result.trafficMode;
}
- (MsgUserInfo_Builder*) setTrafficMode:(TrafficMode) value {
  result.hasTrafficMode = YES;
  result.trafficMode = value;
  return self;
}
- (MsgUserInfo_Builder*) clearTrafficMode {
  result.hasTrafficMode = NO;
  result.trafficMode = TrafficModeInvalidMode;
  return self;
}
- (PBAppendableArray *)areas {
  return result.areasArray;
}
- (NSString*)areasAtIndex:(NSUInteger)index {
  return [result areasAtIndex:index];
}
- (MsgUserInfo_Builder *)addAreas:(NSString*)value {
  if (result.areasArray == nil) {
    result.areasArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.areasArray addObject:value];
  return self;
}
- (MsgUserInfo_Builder *)setAreasArray:(NSArray *)array {
  result.areasArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgUserInfo_Builder *)setAreasValues:(const NSString* *)values count:(NSUInteger)count {
  result.areasArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgUserInfo_Builder *)clearAreas {
  result.areasArray = nil;
  return self;
}
- (BOOL) hasRatecount {
  return result.hasRatecount;
}
- (int32_t) ratecount {
  return result.ratecount;
}
- (MsgUserInfo_Builder*) setRatecount:(int32_t) value {
  result.hasRatecount = YES;
  result.ratecount = value;
  return self;
}
- (MsgUserInfo_Builder*) clearRatecount {
  result.hasRatecount = NO;
  result.ratecount = 0;
  return self;
}
- (BOOL) hasFavorcount {
  return result.hasFavorcount;
}
- (int32_t) favorcount {
  return result.favorcount;
}
- (MsgUserInfo_Builder*) setFavorcount:(int32_t) value {
  result.hasFavorcount = YES;
  result.favorcount = value;
  return self;
}
- (MsgUserInfo_Builder*) clearFavorcount {
  result.hasFavorcount = NO;
  result.favorcount = 0;
  return self;
}
@end

@interface MsgBindResult ()
@property (retain) MsgUserInfo* user;
@property (retain) NSString* extra;
@end

@implementation MsgBindResult

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value {
  hasUser_ = !!value;
}
@synthesize user;
- (BOOL) hasExtra {
  return !!hasExtra_;
}
- (void) setHasExtra:(BOOL) value {
  hasExtra_ = !!value;
}
@synthesize extra;
- (void) dealloc {
  self.user = nil;
  self.extra = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.user = [MsgUserInfo defaultInstance];
    self.extra = @"";
  }
  return self;
}
static MsgBindResult* defaultMsgBindResultInstance = nil;
+ (void) initialize {
  if (self == [MsgBindResult class]) {
    defaultMsgBindResultInstance = [[MsgBindResult alloc] init];
  }
}
+ (MsgBindResult*) defaultInstance {
  return defaultMsgBindResultInstance;
}
- (MsgBindResult*) defaultInstance {
  return defaultMsgBindResultInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  if (self.hasExtra) {
    [output writeString:2 value:self.extra];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUser) {
    size += computeMessageSize(1, self.user);
  }
  if (self.hasExtra) {
    size += computeStringSize(2, self.extra);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgBindResult*) parseFromData:(NSData*) data {
  return (MsgBindResult*)[[[MsgBindResult builder] mergeFromData:data] build];
}
+ (MsgBindResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBindResult*)[[[MsgBindResult builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgBindResult*) parseFromInputStream:(NSInputStream*) input {
  return (MsgBindResult*)[[[MsgBindResult builder] mergeFromInputStream:input] build];
}
+ (MsgBindResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBindResult*)[[[MsgBindResult builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgBindResult*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgBindResult*)[[[MsgBindResult builder] mergeFromCodedInputStream:input] build];
}
+ (MsgBindResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBindResult*)[[[MsgBindResult builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgBindResult_Builder*) builder {
  return [[[MsgBindResult_Builder alloc] init] autorelease];
}
+ (MsgBindResult_Builder*) builderWithPrototype:(MsgBindResult*) prototype {
  return [[MsgBindResult builder] mergeFrom:prototype];
}
- (MsgBindResult_Builder*) builder {
  return [MsgBindResult builder];
}
@end

@interface MsgBindResult_Builder()
@property (retain) MsgBindResult* result;
@end

@implementation MsgBindResult_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgBindResult alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgBindResult_Builder*) clear {
  self.result = [[[MsgBindResult alloc] init] autorelease];
  return self;
}
- (MsgBindResult_Builder*) clone {
  return [MsgBindResult builderWithPrototype:result];
}
- (MsgBindResult*) defaultInstance {
  return [MsgBindResult defaultInstance];
}
- (MsgBindResult*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgBindResult*) buildPartial {
  MsgBindResult* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgBindResult_Builder*) mergeFrom:(MsgBindResult*) other {
  if (other == [MsgBindResult defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasExtra) {
    [self setExtra:other.extra];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgBindResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgBindResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgUserInfo_Builder* subBuilder = [MsgUserInfo builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setExtra:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (MsgUserInfo*) user {
  return result.user;
}
- (MsgBindResult_Builder*) setUser:(MsgUserInfo*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (MsgBindResult_Builder*) setUserBuilder:(MsgUserInfo_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (MsgBindResult_Builder*) mergeUser:(MsgUserInfo*) value {
  if (result.hasUser &&
      result.user != [MsgUserInfo defaultInstance]) {
    result.user =
      [[[MsgUserInfo builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (MsgBindResult_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [MsgUserInfo defaultInstance];
  return self;
}
- (BOOL) hasExtra {
  return result.hasExtra;
}
- (NSString*) extra {
  return result.extra;
}
- (MsgBindResult_Builder*) setExtra:(NSString*) value {
  result.hasExtra = YES;
  result.extra = value;
  return self;
}
- (MsgBindResult_Builder*) clearExtra {
  result.hasExtra = NO;
  result.extra = @"";
  return self;
}
@end

@interface MsgBoard ()
@property (retain) PBAppendableArray * itemsArray;
@end

@implementation MsgBoard

@synthesize itemsArray;
@dynamic items;
- (void) dealloc {
  self.itemsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgBoard* defaultMsgBoardInstance = nil;
+ (void) initialize {
  if (self == [MsgBoard class]) {
    defaultMsgBoardInstance = [[MsgBoard alloc] init];
  }
}
+ (MsgBoard*) defaultInstance {
  return defaultMsgBoardInstance;
}
- (MsgBoard*) defaultInstance {
  return defaultMsgBoardInstance;
}
- (PBArray *)items {
  return itemsArray;
}
- (NSString*)itemsAtIndex:(NSUInteger)index {
  return [itemsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger itemsArrayCount = self.itemsArray.count;
  if (itemsArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.itemsArray.data;
    for (NSUInteger i = 0; i < itemsArrayCount; ++i) {
      [output writeString:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.itemsArray.count;
    const NSString* *values = (const NSString* *)self.itemsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size += dataSize;
    size += 1 * count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgBoard*) parseFromData:(NSData*) data {
  return (MsgBoard*)[[[MsgBoard builder] mergeFromData:data] build];
}
+ (MsgBoard*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBoard*)[[[MsgBoard builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgBoard*) parseFromInputStream:(NSInputStream*) input {
  return (MsgBoard*)[[[MsgBoard builder] mergeFromInputStream:input] build];
}
+ (MsgBoard*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBoard*)[[[MsgBoard builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgBoard*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgBoard*)[[[MsgBoard builder] mergeFromCodedInputStream:input] build];
}
+ (MsgBoard*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBoard*)[[[MsgBoard builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgBoard_Builder*) builder {
  return [[[MsgBoard_Builder alloc] init] autorelease];
}
+ (MsgBoard_Builder*) builderWithPrototype:(MsgBoard*) prototype {
  return [[MsgBoard builder] mergeFrom:prototype];
}
- (MsgBoard_Builder*) builder {
  return [MsgBoard builder];
}
@end

@interface MsgBoard_Builder()
@property (retain) MsgBoard* result;
@end

@implementation MsgBoard_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgBoard alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgBoard_Builder*) clear {
  self.result = [[[MsgBoard alloc] init] autorelease];
  return self;
}
- (MsgBoard_Builder*) clone {
  return [MsgBoard builderWithPrototype:result];
}
- (MsgBoard*) defaultInstance {
  return [MsgBoard defaultInstance];
}
- (MsgBoard*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgBoard*) buildPartial {
  MsgBoard* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgBoard_Builder*) mergeFrom:(MsgBoard*) other {
  if (other == [MsgBoard defaultInstance]) {
    return self;
  }
  if (other.itemsArray.count > 0) {
    if (result.itemsArray == nil) {
      result.itemsArray = [[other.itemsArray copyWithZone:[other.itemsArray zone]] autorelease];
    } else {
      [result.itemsArray appendArray:other.itemsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgBoard_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgBoard_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addItems:[input readString]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)items {
  return result.itemsArray;
}
- (NSString*)itemsAtIndex:(NSUInteger)index {
  return [result itemsAtIndex:index];
}
- (MsgBoard_Builder *)addItems:(NSString*)value {
  if (result.itemsArray == nil) {
    result.itemsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.itemsArray addObject:value];
  return self;
}
- (MsgBoard_Builder *)setItemsArray:(NSArray *)array {
  result.itemsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgBoard_Builder *)setItemsValues:(const NSString* *)values count:(NSUInteger)count {
  result.itemsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgBoard_Builder *)clearItems {
  result.itemsArray = nil;
  return self;
}
@end

@interface MsgDishes ()
@property (retain) PBAppendableArray * dishesArray;
@end

@implementation MsgDishes

@synthesize dishesArray;
@dynamic dishes;
- (void) dealloc {
  self.dishesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgDishes* defaultMsgDishesInstance = nil;
+ (void) initialize {
  if (self == [MsgDishes class]) {
    defaultMsgDishesInstance = [[MsgDishes alloc] init];
  }
}
+ (MsgDishes*) defaultInstance {
  return defaultMsgDishesInstance;
}
- (MsgDishes*) defaultInstance {
  return defaultMsgDishesInstance;
}
- (PBArray *)dishes {
  return dishesArray;
}
- (MsgDish*)dishesAtIndex:(NSUInteger)index {
  return [dishesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (MsgDish* element in self.dishes) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MsgDish *element in self.dishesArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MsgDish *element in self.dishesArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgDishes*) parseFromData:(NSData*) data {
  return (MsgDishes*)[[[MsgDishes builder] mergeFromData:data] build];
}
+ (MsgDishes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDishes*)[[[MsgDishes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgDishes*) parseFromInputStream:(NSInputStream*) input {
  return (MsgDishes*)[[[MsgDishes builder] mergeFromInputStream:input] build];
}
+ (MsgDishes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDishes*)[[[MsgDishes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgDishes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgDishes*)[[[MsgDishes builder] mergeFromCodedInputStream:input] build];
}
+ (MsgDishes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDishes*)[[[MsgDishes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgDishes_Builder*) builder {
  return [[[MsgDishes_Builder alloc] init] autorelease];
}
+ (MsgDishes_Builder*) builderWithPrototype:(MsgDishes*) prototype {
  return [[MsgDishes builder] mergeFrom:prototype];
}
- (MsgDishes_Builder*) builder {
  return [MsgDishes builder];
}
@end

@interface MsgDishes_Builder()
@property (retain) MsgDishes* result;
@end

@implementation MsgDishes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgDishes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgDishes_Builder*) clear {
  self.result = [[[MsgDishes alloc] init] autorelease];
  return self;
}
- (MsgDishes_Builder*) clone {
  return [MsgDishes builderWithPrototype:result];
}
- (MsgDishes*) defaultInstance {
  return [MsgDishes defaultInstance];
}
- (MsgDishes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgDishes*) buildPartial {
  MsgDishes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgDishes_Builder*) mergeFrom:(MsgDishes*) other {
  if (other == [MsgDishes defaultInstance]) {
    return self;
  }
  if (other.dishesArray.count > 0) {
    if (result.dishesArray == nil) {
      result.dishesArray = [[other.dishesArray copyWithZone:[other.dishesArray zone]] autorelease];
    } else {
      [result.dishesArray appendArray:other.dishesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgDishes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgDishes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgDish_Builder* subBuilder = [MsgDish builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDishes:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)dishes {
  return result.dishesArray;
}
- (MsgDish*)dishesAtIndex:(NSUInteger)index {
  return [result dishesAtIndex:index];
}
- (MsgDishes_Builder *)addDishes:(MsgDish*)value {
  if (result.dishesArray == nil) {
    result.dishesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.dishesArray addObject:value];
  return self;
}
- (MsgDishes_Builder *)setDishesArray:(NSArray *)array {
  result.dishesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgDishes_Builder *)setDishesValues:(const MsgDish* *)values count:(NSUInteger)count {
  result.dishesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgDishes_Builder *)clearDishes {
  result.dishesArray = nil;
  return self;
}
@end

@interface MsgDish ()
@property (retain) NSString* name;
@property (retain) NSString* restaurant;
@property (retain) PBAppendableArray * reasonsArray;
@property Float32 rate;
@property int64_t cofreq;
@property Float64 predicted;
@property Float64 rank;
@property Float64 correlation;
@property (retain) NSString* detail;
@end

@implementation MsgDish

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasRestaurant {
  return !!hasRestaurant_;
}
- (void) setHasRestaurant:(BOOL) value {
  hasRestaurant_ = !!value;
}
@synthesize restaurant;
@synthesize reasonsArray;
@dynamic reasons;
- (BOOL) hasRate {
  return !!hasRate_;
}
- (void) setHasRate:(BOOL) value {
  hasRate_ = !!value;
}
@synthesize rate;
- (BOOL) hasCofreq {
  return !!hasCofreq_;
}
- (void) setHasCofreq:(BOOL) value {
  hasCofreq_ = !!value;
}
@synthesize cofreq;
- (BOOL) hasPredicted {
  return !!hasPredicted_;
}
- (void) setHasPredicted:(BOOL) value {
  hasPredicted_ = !!value;
}
@synthesize predicted;
- (BOOL) hasRank {
  return !!hasRank_;
}
- (void) setHasRank:(BOOL) value {
  hasRank_ = !!value;
}
@synthesize rank;
- (BOOL) hasCorrelation {
  return !!hasCorrelation_;
}
- (void) setHasCorrelation:(BOOL) value {
  hasCorrelation_ = !!value;
}
@synthesize correlation;
- (BOOL) hasDetail {
  return !!hasDetail_;
}
- (void) setHasDetail:(BOOL) value {
  hasDetail_ = !!value;
}
@synthesize detail;
- (void) dealloc {
  self.name = nil;
  self.restaurant = nil;
  self.reasonsArray = nil;
  self.detail = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.restaurant = @"";
    self.rate = 0;
    self.cofreq = 0L;
    self.predicted = 0;
    self.rank = 0;
    self.correlation = 0;
    self.detail = @"";
  }
  return self;
}
static MsgDish* defaultMsgDishInstance = nil;
+ (void) initialize {
  if (self == [MsgDish class]) {
    defaultMsgDishInstance = [[MsgDish alloc] init];
  }
}
+ (MsgDish*) defaultInstance {
  return defaultMsgDishInstance;
}
- (MsgDish*) defaultInstance {
  return defaultMsgDishInstance;
}
- (PBArray *)reasons {
  return reasonsArray;
}
- (NSString*)reasonsAtIndex:(NSUInteger)index {
  return [reasonsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasRestaurant) {
    [output writeString:2 value:self.restaurant];
  }
  const NSUInteger reasonsArrayCount = self.reasonsArray.count;
  if (reasonsArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.reasonsArray.data;
    for (NSUInteger i = 0; i < reasonsArrayCount; ++i) {
      [output writeString:3 value:values[i]];
    }
  }
  if (self.hasRate) {
    [output writeFloat:4 value:self.rate];
  }
  if (self.hasCofreq) {
    [output writeInt64:11 value:self.cofreq];
  }
  if (self.hasPredicted) {
    [output writeDouble:12 value:self.predicted];
  }
  if (self.hasRank) {
    [output writeDouble:13 value:self.rank];
  }
  if (self.hasCorrelation) {
    [output writeDouble:14 value:self.correlation];
  }
  if (self.hasDetail) {
    [output writeString:15 value:self.detail];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasRestaurant) {
    size += computeStringSize(2, self.restaurant);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.reasonsArray.count;
    const NSString* *values = (const NSString* *)self.reasonsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size += dataSize;
    size += 1 * count;
  }
  if (self.hasRate) {
    size += computeFloatSize(4, self.rate);
  }
  if (self.hasCofreq) {
    size += computeInt64Size(11, self.cofreq);
  }
  if (self.hasPredicted) {
    size += computeDoubleSize(12, self.predicted);
  }
  if (self.hasRank) {
    size += computeDoubleSize(13, self.rank);
  }
  if (self.hasCorrelation) {
    size += computeDoubleSize(14, self.correlation);
  }
  if (self.hasDetail) {
    size += computeStringSize(15, self.detail);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgDish*) parseFromData:(NSData*) data {
  return (MsgDish*)[[[MsgDish builder] mergeFromData:data] build];
}
+ (MsgDish*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDish*)[[[MsgDish builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgDish*) parseFromInputStream:(NSInputStream*) input {
  return (MsgDish*)[[[MsgDish builder] mergeFromInputStream:input] build];
}
+ (MsgDish*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDish*)[[[MsgDish builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgDish*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgDish*)[[[MsgDish builder] mergeFromCodedInputStream:input] build];
}
+ (MsgDish*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDish*)[[[MsgDish builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgDish_Builder*) builder {
  return [[[MsgDish_Builder alloc] init] autorelease];
}
+ (MsgDish_Builder*) builderWithPrototype:(MsgDish*) prototype {
  return [[MsgDish builder] mergeFrom:prototype];
}
- (MsgDish_Builder*) builder {
  return [MsgDish builder];
}
@end

@interface MsgDish_Builder()
@property (retain) MsgDish* result;
@end

@implementation MsgDish_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgDish alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgDish_Builder*) clear {
  self.result = [[[MsgDish alloc] init] autorelease];
  return self;
}
- (MsgDish_Builder*) clone {
  return [MsgDish builderWithPrototype:result];
}
- (MsgDish*) defaultInstance {
  return [MsgDish defaultInstance];
}
- (MsgDish*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgDish*) buildPartial {
  MsgDish* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgDish_Builder*) mergeFrom:(MsgDish*) other {
  if (other == [MsgDish defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasRestaurant) {
    [self setRestaurant:other.restaurant];
  }
  if (other.reasonsArray.count > 0) {
    if (result.reasonsArray == nil) {
      result.reasonsArray = [[other.reasonsArray copyWithZone:[other.reasonsArray zone]] autorelease];
    } else {
      [result.reasonsArray appendArray:other.reasonsArray];
    }
  }
  if (other.hasRate) {
    [self setRate:other.rate];
  }
  if (other.hasCofreq) {
    [self setCofreq:other.cofreq];
  }
  if (other.hasPredicted) {
    [self setPredicted:other.predicted];
  }
  if (other.hasRank) {
    [self setRank:other.rank];
  }
  if (other.hasCorrelation) {
    [self setCorrelation:other.correlation];
  }
  if (other.hasDetail) {
    [self setDetail:other.detail];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgDish_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgDish_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setRestaurant:[input readString]];
        break;
      }
      case 26: {
        [self addReasons:[input readString]];
        break;
      }
      case 37: {
        [self setRate:[input readFloat]];
        break;
      }
      case 88: {
        [self setCofreq:[input readInt64]];
        break;
      }
      case 97: {
        [self setPredicted:[input readDouble]];
        break;
      }
      case 105: {
        [self setRank:[input readDouble]];
        break;
      }
      case 113: {
        [self setCorrelation:[input readDouble]];
        break;
      }
      case 122: {
        [self setDetail:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MsgDish_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MsgDish_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasRestaurant {
  return result.hasRestaurant;
}
- (NSString*) restaurant {
  return result.restaurant;
}
- (MsgDish_Builder*) setRestaurant:(NSString*) value {
  result.hasRestaurant = YES;
  result.restaurant = value;
  return self;
}
- (MsgDish_Builder*) clearRestaurant {
  result.hasRestaurant = NO;
  result.restaurant = @"";
  return self;
}
- (PBAppendableArray *)reasons {
  return result.reasonsArray;
}
- (NSString*)reasonsAtIndex:(NSUInteger)index {
  return [result reasonsAtIndex:index];
}
- (MsgDish_Builder *)addReasons:(NSString*)value {
  if (result.reasonsArray == nil) {
    result.reasonsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.reasonsArray addObject:value];
  return self;
}
- (MsgDish_Builder *)setReasonsArray:(NSArray *)array {
  result.reasonsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgDish_Builder *)setReasonsValues:(const NSString* *)values count:(NSUInteger)count {
  result.reasonsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgDish_Builder *)clearReasons {
  result.reasonsArray = nil;
  return self;
}
- (BOOL) hasRate {
  return result.hasRate;
}
- (Float32) rate {
  return result.rate;
}
- (MsgDish_Builder*) setRate:(Float32) value {
  result.hasRate = YES;
  result.rate = value;
  return self;
}
- (MsgDish_Builder*) clearRate {
  result.hasRate = NO;
  result.rate = 0;
  return self;
}
- (BOOL) hasCofreq {
  return result.hasCofreq;
}
- (int64_t) cofreq {
  return result.cofreq;
}
- (MsgDish_Builder*) setCofreq:(int64_t) value {
  result.hasCofreq = YES;
  result.cofreq = value;
  return self;
}
- (MsgDish_Builder*) clearCofreq {
  result.hasCofreq = NO;
  result.cofreq = 0L;
  return self;
}
- (BOOL) hasPredicted {
  return result.hasPredicted;
}
- (Float64) predicted {
  return result.predicted;
}
- (MsgDish_Builder*) setPredicted:(Float64) value {
  result.hasPredicted = YES;
  result.predicted = value;
  return self;
}
- (MsgDish_Builder*) clearPredicted {
  result.hasPredicted = NO;
  result.predicted = 0;
  return self;
}
- (BOOL) hasRank {
  return result.hasRank;
}
- (Float64) rank {
  return result.rank;
}
- (MsgDish_Builder*) setRank:(Float64) value {
  result.hasRank = YES;
  result.rank = value;
  return self;
}
- (MsgDish_Builder*) clearRank {
  result.hasRank = NO;
  result.rank = 0;
  return self;
}
- (BOOL) hasCorrelation {
  return result.hasCorrelation;
}
- (Float64) correlation {
  return result.correlation;
}
- (MsgDish_Builder*) setCorrelation:(Float64) value {
  result.hasCorrelation = YES;
  result.correlation = value;
  return self;
}
- (MsgDish_Builder*) clearCorrelation {
  result.hasCorrelation = NO;
  result.correlation = 0;
  return self;
}
- (BOOL) hasDetail {
  return result.hasDetail;
}
- (NSString*) detail {
  return result.detail;
}
- (MsgDish_Builder*) setDetail:(NSString*) value {
  result.hasDetail = YES;
  result.detail = value;
  return self;
}
- (MsgDish_Builder*) clearDetail {
  result.hasDetail = NO;
  result.detail = @"";
  return self;
}
@end

@interface MsgRelatedRest ()
@property (retain) PBAppendableArray * restaurantArray;
@end

@implementation MsgRelatedRest

@synthesize restaurantArray;
@dynamic restaurant;
- (void) dealloc {
  self.restaurantArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgRelatedRest* defaultMsgRelatedRestInstance = nil;
+ (void) initialize {
  if (self == [MsgRelatedRest class]) {
    defaultMsgRelatedRestInstance = [[MsgRelatedRest alloc] init];
  }
}
+ (MsgRelatedRest*) defaultInstance {
  return defaultMsgRelatedRestInstance;
}
- (MsgRelatedRest*) defaultInstance {
  return defaultMsgRelatedRestInstance;
}
- (PBArray *)restaurant {
  return restaurantArray;
}
- (NSString*)restaurantAtIndex:(NSUInteger)index {
  return [restaurantArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger restaurantArrayCount = self.restaurantArray.count;
  if (restaurantArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.restaurantArray.data;
    for (NSUInteger i = 0; i < restaurantArrayCount; ++i) {
      [output writeString:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.restaurantArray.count;
    const NSString* *values = (const NSString* *)self.restaurantArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size += dataSize;
    size += 1 * count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgRelatedRest*) parseFromData:(NSData*) data {
  return (MsgRelatedRest*)[[[MsgRelatedRest builder] mergeFromData:data] build];
}
+ (MsgRelatedRest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRelatedRest*)[[[MsgRelatedRest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgRelatedRest*) parseFromInputStream:(NSInputStream*) input {
  return (MsgRelatedRest*)[[[MsgRelatedRest builder] mergeFromInputStream:input] build];
}
+ (MsgRelatedRest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRelatedRest*)[[[MsgRelatedRest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRelatedRest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgRelatedRest*)[[[MsgRelatedRest builder] mergeFromCodedInputStream:input] build];
}
+ (MsgRelatedRest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgRelatedRest*)[[[MsgRelatedRest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgRelatedRest_Builder*) builder {
  return [[[MsgRelatedRest_Builder alloc] init] autorelease];
}
+ (MsgRelatedRest_Builder*) builderWithPrototype:(MsgRelatedRest*) prototype {
  return [[MsgRelatedRest builder] mergeFrom:prototype];
}
- (MsgRelatedRest_Builder*) builder {
  return [MsgRelatedRest builder];
}
@end

@interface MsgRelatedRest_Builder()
@property (retain) MsgRelatedRest* result;
@end

@implementation MsgRelatedRest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgRelatedRest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgRelatedRest_Builder*) clear {
  self.result = [[[MsgRelatedRest alloc] init] autorelease];
  return self;
}
- (MsgRelatedRest_Builder*) clone {
  return [MsgRelatedRest builderWithPrototype:result];
}
- (MsgRelatedRest*) defaultInstance {
  return [MsgRelatedRest defaultInstance];
}
- (MsgRelatedRest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgRelatedRest*) buildPartial {
  MsgRelatedRest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgRelatedRest_Builder*) mergeFrom:(MsgRelatedRest*) other {
  if (other == [MsgRelatedRest defaultInstance]) {
    return self;
  }
  if (other.restaurantArray.count > 0) {
    if (result.restaurantArray == nil) {
      result.restaurantArray = [[other.restaurantArray copyWithZone:[other.restaurantArray zone]] autorelease];
    } else {
      [result.restaurantArray appendArray:other.restaurantArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgRelatedRest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgRelatedRest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addRestaurant:[input readString]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)restaurant {
  return result.restaurantArray;
}
- (NSString*)restaurantAtIndex:(NSUInteger)index {
  return [result restaurantAtIndex:index];
}
- (MsgRelatedRest_Builder *)addRestaurant:(NSString*)value {
  if (result.restaurantArray == nil) {
    result.restaurantArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.restaurantArray addObject:value];
  return self;
}
- (MsgRelatedRest_Builder *)setRestaurantArray:(NSArray *)array {
  result.restaurantArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRelatedRest_Builder *)setRestaurantValues:(const NSString* *)values count:(NSUInteger)count {
  result.restaurantArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgRelatedRest_Builder *)clearRestaurant {
  result.restaurantArray = nil;
  return self;
}
@end

@interface MsgBanner ()
@property (retain) NSString* id;
@property (retain) NSString* title;
@property (retain) NSString* desc;
@property (retain) NSString* imageUrl;
@property (retain) NSString* url;
@property (retain) NSString* target;
@end

@implementation MsgBanner

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasImageUrl {
  return !!hasImageUrl_;
}
- (void) setHasImageUrl:(BOOL) value {
  hasImageUrl_ = !!value;
}
@synthesize imageUrl;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) value {
  hasUrl_ = !!value;
}
@synthesize url;
- (BOOL) hasTarget {
  return !!hasTarget_;
}
- (void) setHasTarget:(BOOL) value {
  hasTarget_ = !!value;
}
@synthesize target;
- (void) dealloc {
  self.id = nil;
  self.title = nil;
  self.desc = nil;
  self.imageUrl = nil;
  self.url = nil;
  self.target = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.title = @"";
    self.desc = @"";
    self.imageUrl = @"";
    self.url = @"";
    self.target = @"";
  }
  return self;
}
static MsgBanner* defaultMsgBannerInstance = nil;
+ (void) initialize {
  if (self == [MsgBanner class]) {
    defaultMsgBannerInstance = [[MsgBanner alloc] init];
  }
}
+ (MsgBanner*) defaultInstance {
  return defaultMsgBannerInstance;
}
- (MsgBanner*) defaultInstance {
  return defaultMsgBannerInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasDesc) {
    [output writeString:3 value:self.desc];
  }
  if (self.hasImageUrl) {
    [output writeString:4 value:self.imageUrl];
  }
  if (self.hasUrl) {
    [output writeString:5 value:self.url];
  }
  if (self.hasTarget) {
    [output writeString:6 value:self.target];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasTitle) {
    size += computeStringSize(2, self.title);
  }
  if (self.hasDesc) {
    size += computeStringSize(3, self.desc);
  }
  if (self.hasImageUrl) {
    size += computeStringSize(4, self.imageUrl);
  }
  if (self.hasUrl) {
    size += computeStringSize(5, self.url);
  }
  if (self.hasTarget) {
    size += computeStringSize(6, self.target);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgBanner*) parseFromData:(NSData*) data {
  return (MsgBanner*)[[[MsgBanner builder] mergeFromData:data] build];
}
+ (MsgBanner*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBanner*)[[[MsgBanner builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgBanner*) parseFromInputStream:(NSInputStream*) input {
  return (MsgBanner*)[[[MsgBanner builder] mergeFromInputStream:input] build];
}
+ (MsgBanner*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBanner*)[[[MsgBanner builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgBanner*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgBanner*)[[[MsgBanner builder] mergeFromCodedInputStream:input] build];
}
+ (MsgBanner*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgBanner*)[[[MsgBanner builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgBanner_Builder*) builder {
  return [[[MsgBanner_Builder alloc] init] autorelease];
}
+ (MsgBanner_Builder*) builderWithPrototype:(MsgBanner*) prototype {
  return [[MsgBanner builder] mergeFrom:prototype];
}
- (MsgBanner_Builder*) builder {
  return [MsgBanner builder];
}
@end

@interface MsgBanner_Builder()
@property (retain) MsgBanner* result;
@end

@implementation MsgBanner_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgBanner alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgBanner_Builder*) clear {
  self.result = [[[MsgBanner alloc] init] autorelease];
  return self;
}
- (MsgBanner_Builder*) clone {
  return [MsgBanner builderWithPrototype:result];
}
- (MsgBanner*) defaultInstance {
  return [MsgBanner defaultInstance];
}
- (MsgBanner*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgBanner*) buildPartial {
  MsgBanner* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgBanner_Builder*) mergeFrom:(MsgBanner*) other {
  if (other == [MsgBanner defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasImageUrl) {
    [self setImageUrl:other.imageUrl];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasTarget) {
    [self setTarget:other.target];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgBanner_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgBanner_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self setDesc:[input readString]];
        break;
      }
      case 34: {
        [self setImageUrl:[input readString]];
        break;
      }
      case 42: {
        [self setUrl:[input readString]];
        break;
      }
      case 50: {
        [self setTarget:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (MsgBanner_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (MsgBanner_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (MsgBanner_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (MsgBanner_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (MsgBanner_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (MsgBanner_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasImageUrl {
  return result.hasImageUrl;
}
- (NSString*) imageUrl {
  return result.imageUrl;
}
- (MsgBanner_Builder*) setImageUrl:(NSString*) value {
  result.hasImageUrl = YES;
  result.imageUrl = value;
  return self;
}
- (MsgBanner_Builder*) clearImageUrl {
  result.hasImageUrl = NO;
  result.imageUrl = @"";
  return self;
}
- (BOOL) hasUrl {
  return result.hasUrl;
}
- (NSString*) url {
  return result.url;
}
- (MsgBanner_Builder*) setUrl:(NSString*) value {
  result.hasUrl = YES;
  result.url = value;
  return self;
}
- (MsgBanner_Builder*) clearUrl {
  result.hasUrl = NO;
  result.url = @"";
  return self;
}
- (BOOL) hasTarget {
  return result.hasTarget;
}
- (NSString*) target {
  return result.target;
}
- (MsgBanner_Builder*) setTarget:(NSString*) value {
  result.hasTarget = YES;
  result.target = value;
  return self;
}
- (MsgBanner_Builder*) clearTarget {
  result.hasTarget = NO;
  result.target = @"";
  return self;
}
@end

@interface MsgTableData ()
@property (retain) NSString* tableName;
@property (retain) PBAppendableArray * fieldNamesArray;
@property (retain) PBAppendableArray * rowsArray;
@end

@implementation MsgTableData

- (BOOL) hasTableName {
  return !!hasTableName_;
}
- (void) setHasTableName:(BOOL) value {
  hasTableName_ = !!value;
}
@synthesize tableName;
@synthesize fieldNamesArray;
@dynamic fieldNames;
@synthesize rowsArray;
@dynamic rows;
- (void) dealloc {
  self.tableName = nil;
  self.fieldNamesArray = nil;
  self.rowsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.tableName = @"";
  }
  return self;
}
static MsgTableData* defaultMsgTableDataInstance = nil;
+ (void) initialize {
  if (self == [MsgTableData class]) {
    defaultMsgTableDataInstance = [[MsgTableData alloc] init];
  }
}
+ (MsgTableData*) defaultInstance {
  return defaultMsgTableDataInstance;
}
- (MsgTableData*) defaultInstance {
  return defaultMsgTableDataInstance;
}
- (PBArray *)fieldNames {
  return fieldNamesArray;
}
- (NSString*)fieldNamesAtIndex:(NSUInteger)index {
  return [fieldNamesArray objectAtIndex:index];
}
- (PBArray *)rows {
  return rowsArray;
}
- (MsgTableRow*)rowsAtIndex:(NSUInteger)index {
  return [rowsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasTableName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTableName) {
    [output writeString:1 value:self.tableName];
  }
  const NSUInteger fieldNamesArrayCount = self.fieldNamesArray.count;
  if (fieldNamesArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.fieldNamesArray.data;
    for (NSUInteger i = 0; i < fieldNamesArrayCount; ++i) {
      [output writeString:2 value:values[i]];
    }
  }
  for (MsgTableRow *element in self.rowsArray) {
    [output writeMessage:3 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTableName) {
    size += computeStringSize(1, self.tableName);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.fieldNamesArray.count;
    const NSString* *values = (const NSString* *)self.fieldNamesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size += dataSize;
    size += 1 * count;
  }
  for (MsgTableRow *element in self.rowsArray) {
    size += computeMessageSize(3, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgTableData*) parseFromData:(NSData*) data {
  return (MsgTableData*)[[[MsgTableData builder] mergeFromData:data] build];
}
+ (MsgTableData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTableData*)[[[MsgTableData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgTableData*) parseFromInputStream:(NSInputStream*) input {
  return (MsgTableData*)[[[MsgTableData builder] mergeFromInputStream:input] build];
}
+ (MsgTableData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTableData*)[[[MsgTableData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTableData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgTableData*)[[[MsgTableData builder] mergeFromCodedInputStream:input] build];
}
+ (MsgTableData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTableData*)[[[MsgTableData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTableData_Builder*) builder {
  return [[[MsgTableData_Builder alloc] init] autorelease];
}
+ (MsgTableData_Builder*) builderWithPrototype:(MsgTableData*) prototype {
  return [[MsgTableData builder] mergeFrom:prototype];
}
- (MsgTableData_Builder*) builder {
  return [MsgTableData builder];
}
@end

@interface MsgTableData_Builder()
@property (retain) MsgTableData* result;
@end

@implementation MsgTableData_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgTableData alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgTableData_Builder*) clear {
  self.result = [[[MsgTableData alloc] init] autorelease];
  return self;
}
- (MsgTableData_Builder*) clone {
  return [MsgTableData builderWithPrototype:result];
}
- (MsgTableData*) defaultInstance {
  return [MsgTableData defaultInstance];
}
- (MsgTableData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgTableData*) buildPartial {
  MsgTableData* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgTableData_Builder*) mergeFrom:(MsgTableData*) other {
  if (other == [MsgTableData defaultInstance]) {
    return self;
  }
  if (other.hasTableName) {
    [self setTableName:other.tableName];
  }
  if (other.fieldNamesArray.count > 0) {
    if (result.fieldNamesArray == nil) {
      result.fieldNamesArray = [[other.fieldNamesArray copyWithZone:[other.fieldNamesArray zone]] autorelease];
    } else {
      [result.fieldNamesArray appendArray:other.fieldNamesArray];
    }
  }
  if (other.rowsArray.count > 0) {
    if (result.rowsArray == nil) {
      result.rowsArray = [[other.rowsArray copyWithZone:[other.rowsArray zone]] autorelease];
    } else {
      [result.rowsArray appendArray:other.rowsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgTableData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgTableData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTableName:[input readString]];
        break;
      }
      case 18: {
        [self addFieldNames:[input readString]];
        break;
      }
      case 26: {
        MsgTableRow_Builder* subBuilder = [MsgTableRow builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRows:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasTableName {
  return result.hasTableName;
}
- (NSString*) tableName {
  return result.tableName;
}
- (MsgTableData_Builder*) setTableName:(NSString*) value {
  result.hasTableName = YES;
  result.tableName = value;
  return self;
}
- (MsgTableData_Builder*) clearTableName {
  result.hasTableName = NO;
  result.tableName = @"";
  return self;
}
- (PBAppendableArray *)fieldNames {
  return result.fieldNamesArray;
}
- (NSString*)fieldNamesAtIndex:(NSUInteger)index {
  return [result fieldNamesAtIndex:index];
}
- (MsgTableData_Builder *)addFieldNames:(NSString*)value {
  if (result.fieldNamesArray == nil) {
    result.fieldNamesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.fieldNamesArray addObject:value];
  return self;
}
- (MsgTableData_Builder *)setFieldNamesArray:(NSArray *)array {
  result.fieldNamesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgTableData_Builder *)setFieldNamesValues:(const NSString* *)values count:(NSUInteger)count {
  result.fieldNamesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgTableData_Builder *)clearFieldNames {
  result.fieldNamesArray = nil;
  return self;
}
- (PBAppendableArray *)rows {
  return result.rowsArray;
}
- (MsgTableRow*)rowsAtIndex:(NSUInteger)index {
  return [result rowsAtIndex:index];
}
- (MsgTableData_Builder *)addRows:(MsgTableRow*)value {
  if (result.rowsArray == nil) {
    result.rowsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.rowsArray addObject:value];
  return self;
}
- (MsgTableData_Builder *)setRowsArray:(NSArray *)array {
  result.rowsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgTableData_Builder *)setRowsValues:(const MsgTableRow* *)values count:(NSUInteger)count {
  result.rowsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgTableData_Builder *)clearRows {
  result.rowsArray = nil;
  return self;
}
@end

@interface MsgTableRow ()
@property (retain) PBAppendableArray * fieldValuesArray;
@end

@implementation MsgTableRow

@synthesize fieldValuesArray;
@dynamic fieldValues;
- (void) dealloc {
  self.fieldValuesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgTableRow* defaultMsgTableRowInstance = nil;
+ (void) initialize {
  if (self == [MsgTableRow class]) {
    defaultMsgTableRowInstance = [[MsgTableRow alloc] init];
  }
}
+ (MsgTableRow*) defaultInstance {
  return defaultMsgTableRowInstance;
}
- (MsgTableRow*) defaultInstance {
  return defaultMsgTableRowInstance;
}
- (PBArray *)fieldValues {
  return fieldValuesArray;
}
- (NSString*)fieldValuesAtIndex:(NSUInteger)index {
  return [fieldValuesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger fieldValuesArrayCount = self.fieldValuesArray.count;
  if (fieldValuesArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.fieldValuesArray.data;
    for (NSUInteger i = 0; i < fieldValuesArrayCount; ++i) {
      [output writeString:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.fieldValuesArray.count;
    const NSString* *values = (const NSString* *)self.fieldValuesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size += dataSize;
    size += 1 * count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgTableRow*) parseFromData:(NSData*) data {
  return (MsgTableRow*)[[[MsgTableRow builder] mergeFromData:data] build];
}
+ (MsgTableRow*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTableRow*)[[[MsgTableRow builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgTableRow*) parseFromInputStream:(NSInputStream*) input {
  return (MsgTableRow*)[[[MsgTableRow builder] mergeFromInputStream:input] build];
}
+ (MsgTableRow*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTableRow*)[[[MsgTableRow builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTableRow*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgTableRow*)[[[MsgTableRow builder] mergeFromCodedInputStream:input] build];
}
+ (MsgTableRow*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTableRow*)[[[MsgTableRow builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTableRow_Builder*) builder {
  return [[[MsgTableRow_Builder alloc] init] autorelease];
}
+ (MsgTableRow_Builder*) builderWithPrototype:(MsgTableRow*) prototype {
  return [[MsgTableRow builder] mergeFrom:prototype];
}
- (MsgTableRow_Builder*) builder {
  return [MsgTableRow builder];
}
@end

@interface MsgTableRow_Builder()
@property (retain) MsgTableRow* result;
@end

@implementation MsgTableRow_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgTableRow alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgTableRow_Builder*) clear {
  self.result = [[[MsgTableRow alloc] init] autorelease];
  return self;
}
- (MsgTableRow_Builder*) clone {
  return [MsgTableRow builderWithPrototype:result];
}
- (MsgTableRow*) defaultInstance {
  return [MsgTableRow defaultInstance];
}
- (MsgTableRow*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgTableRow*) buildPartial {
  MsgTableRow* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgTableRow_Builder*) mergeFrom:(MsgTableRow*) other {
  if (other == [MsgTableRow defaultInstance]) {
    return self;
  }
  if (other.fieldValuesArray.count > 0) {
    if (result.fieldValuesArray == nil) {
      result.fieldValuesArray = [[other.fieldValuesArray copyWithZone:[other.fieldValuesArray zone]] autorelease];
    } else {
      [result.fieldValuesArray appendArray:other.fieldValuesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgTableRow_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgTableRow_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addFieldValues:[input readString]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)fieldValues {
  return result.fieldValuesArray;
}
- (NSString*)fieldValuesAtIndex:(NSUInteger)index {
  return [result fieldValuesAtIndex:index];
}
- (MsgTableRow_Builder *)addFieldValues:(NSString*)value {
  if (result.fieldValuesArray == nil) {
    result.fieldValuesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.fieldValuesArray addObject:value];
  return self;
}
- (MsgTableRow_Builder *)setFieldValuesArray:(NSArray *)array {
  result.fieldValuesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgTableRow_Builder *)setFieldValuesValues:(const NSString* *)values count:(NSUInteger)count {
  result.fieldValuesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgTableRow_Builder *)clearFieldValues {
  result.fieldValuesArray = nil;
  return self;
}
@end

@interface MsgTextInfo ()
@property (retain) NSString* text;
@end

@implementation MsgTextInfo

- (BOOL) hasText {
  return !!hasText_;
}
- (void) setHasText:(BOOL) value {
  hasText_ = !!value;
}
@synthesize text;
- (void) dealloc {
  self.text = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.text = @"";
  }
  return self;
}
static MsgTextInfo* defaultMsgTextInfoInstance = nil;
+ (void) initialize {
  if (self == [MsgTextInfo class]) {
    defaultMsgTextInfoInstance = [[MsgTextInfo alloc] init];
  }
}
+ (MsgTextInfo*) defaultInstance {
  return defaultMsgTextInfoInstance;
}
- (MsgTextInfo*) defaultInstance {
  return defaultMsgTextInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasText) {
    [output writeString:1 value:self.text];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasText) {
    size += computeStringSize(1, self.text);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgTextInfo*) parseFromData:(NSData*) data {
  return (MsgTextInfo*)[[[MsgTextInfo builder] mergeFromData:data] build];
}
+ (MsgTextInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTextInfo*)[[[MsgTextInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgTextInfo*) parseFromInputStream:(NSInputStream*) input {
  return (MsgTextInfo*)[[[MsgTextInfo builder] mergeFromInputStream:input] build];
}
+ (MsgTextInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTextInfo*)[[[MsgTextInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTextInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgTextInfo*)[[[MsgTextInfo builder] mergeFromCodedInputStream:input] build];
}
+ (MsgTextInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTextInfo*)[[[MsgTextInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTextInfo_Builder*) builder {
  return [[[MsgTextInfo_Builder alloc] init] autorelease];
}
+ (MsgTextInfo_Builder*) builderWithPrototype:(MsgTextInfo*) prototype {
  return [[MsgTextInfo builder] mergeFrom:prototype];
}
- (MsgTextInfo_Builder*) builder {
  return [MsgTextInfo builder];
}
@end

@interface MsgTextInfo_Builder()
@property (retain) MsgTextInfo* result;
@end

@implementation MsgTextInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgTextInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgTextInfo_Builder*) clear {
  self.result = [[[MsgTextInfo alloc] init] autorelease];
  return self;
}
- (MsgTextInfo_Builder*) clone {
  return [MsgTextInfo builderWithPrototype:result];
}
- (MsgTextInfo*) defaultInstance {
  return [MsgTextInfo defaultInstance];
}
- (MsgTextInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgTextInfo*) buildPartial {
  MsgTextInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgTextInfo_Builder*) mergeFrom:(MsgTextInfo*) other {
  if (other == [MsgTextInfo defaultInstance]) {
    return self;
  }
  if (other.hasText) {
    [self setText:other.text];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgTextInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgTextInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setText:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasText {
  return result.hasText;
}
- (NSString*) text {
  return result.text;
}
- (MsgTextInfo_Builder*) setText:(NSString*) value {
  result.hasText = YES;
  result.text = value;
  return self;
}
- (MsgTextInfo_Builder*) clearText {
  result.hasText = NO;
  result.text = @"";
  return self;
}
@end

@interface MsgTokenInfos ()
@property (retain) PBAppendableArray * tokensArray;
@end

@implementation MsgTokenInfos

@synthesize tokensArray;
@dynamic tokens;
- (void) dealloc {
  self.tokensArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgTokenInfos* defaultMsgTokenInfosInstance = nil;
+ (void) initialize {
  if (self == [MsgTokenInfos class]) {
    defaultMsgTokenInfosInstance = [[MsgTokenInfos alloc] init];
  }
}
+ (MsgTokenInfos*) defaultInstance {
  return defaultMsgTokenInfosInstance;
}
- (MsgTokenInfos*) defaultInstance {
  return defaultMsgTokenInfosInstance;
}
- (PBArray *)tokens {
  return tokensArray;
}
- (MsgTokenInfo*)tokensAtIndex:(NSUInteger)index {
  return [tokensArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MsgTokenInfo *element in self.tokensArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MsgTokenInfo *element in self.tokensArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgTokenInfos*) parseFromData:(NSData*) data {
  return (MsgTokenInfos*)[[[MsgTokenInfos builder] mergeFromData:data] build];
}
+ (MsgTokenInfos*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTokenInfos*)[[[MsgTokenInfos builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgTokenInfos*) parseFromInputStream:(NSInputStream*) input {
  return (MsgTokenInfos*)[[[MsgTokenInfos builder] mergeFromInputStream:input] build];
}
+ (MsgTokenInfos*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTokenInfos*)[[[MsgTokenInfos builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTokenInfos*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgTokenInfos*)[[[MsgTokenInfos builder] mergeFromCodedInputStream:input] build];
}
+ (MsgTokenInfos*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTokenInfos*)[[[MsgTokenInfos builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTokenInfos_Builder*) builder {
  return [[[MsgTokenInfos_Builder alloc] init] autorelease];
}
+ (MsgTokenInfos_Builder*) builderWithPrototype:(MsgTokenInfos*) prototype {
  return [[MsgTokenInfos builder] mergeFrom:prototype];
}
- (MsgTokenInfos_Builder*) builder {
  return [MsgTokenInfos builder];
}
@end

@interface MsgTokenInfos_Builder()
@property (retain) MsgTokenInfos* result;
@end

@implementation MsgTokenInfos_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgTokenInfos alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgTokenInfos_Builder*) clear {
  self.result = [[[MsgTokenInfos alloc] init] autorelease];
  return self;
}
- (MsgTokenInfos_Builder*) clone {
  return [MsgTokenInfos builderWithPrototype:result];
}
- (MsgTokenInfos*) defaultInstance {
  return [MsgTokenInfos defaultInstance];
}
- (MsgTokenInfos*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgTokenInfos*) buildPartial {
  MsgTokenInfos* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgTokenInfos_Builder*) mergeFrom:(MsgTokenInfos*) other {
  if (other == [MsgTokenInfos defaultInstance]) {
    return self;
  }
  if (other.tokensArray.count > 0) {
    if (result.tokensArray == nil) {
      result.tokensArray = [[other.tokensArray copyWithZone:[other.tokensArray zone]] autorelease];
    } else {
      [result.tokensArray appendArray:other.tokensArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgTokenInfos_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgTokenInfos_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgTokenInfo_Builder* subBuilder = [MsgTokenInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTokens:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)tokens {
  return result.tokensArray;
}
- (MsgTokenInfo*)tokensAtIndex:(NSUInteger)index {
  return [result tokensAtIndex:index];
}
- (MsgTokenInfos_Builder *)addTokens:(MsgTokenInfo*)value {
  if (result.tokensArray == nil) {
    result.tokensArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.tokensArray addObject:value];
  return self;
}
- (MsgTokenInfos_Builder *)setTokensArray:(NSArray *)array {
  result.tokensArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgTokenInfos_Builder *)setTokensValues:(const MsgTokenInfo* *)values count:(NSUInteger)count {
  result.tokensArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgTokenInfos_Builder *)clearTokens {
  result.tokensArray = nil;
  return self;
}
@end

@interface MsgTokenInfo ()
@property int64_t userId;
@property (retain) NSString* token;
@end

@implementation MsgTokenInfo

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (void) dealloc {
  self.token = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.token = @"";
  }
  return self;
}
static MsgTokenInfo* defaultMsgTokenInfoInstance = nil;
+ (void) initialize {
  if (self == [MsgTokenInfo class]) {
    defaultMsgTokenInfoInstance = [[MsgTokenInfo alloc] init];
  }
}
+ (MsgTokenInfo*) defaultInstance {
  return defaultMsgTokenInfoInstance;
}
- (MsgTokenInfo*) defaultInstance {
  return defaultMsgTokenInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt64:1 value:self.userId];
  }
  if (self.hasToken) {
    [output writeString:2 value:self.token];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt64Size(1, self.userId);
  }
  if (self.hasToken) {
    size += computeStringSize(2, self.token);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgTokenInfo*) parseFromData:(NSData*) data {
  return (MsgTokenInfo*)[[[MsgTokenInfo builder] mergeFromData:data] build];
}
+ (MsgTokenInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTokenInfo*)[[[MsgTokenInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgTokenInfo*) parseFromInputStream:(NSInputStream*) input {
  return (MsgTokenInfo*)[[[MsgTokenInfo builder] mergeFromInputStream:input] build];
}
+ (MsgTokenInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTokenInfo*)[[[MsgTokenInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTokenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgTokenInfo*)[[[MsgTokenInfo builder] mergeFromCodedInputStream:input] build];
}
+ (MsgTokenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgTokenInfo*)[[[MsgTokenInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgTokenInfo_Builder*) builder {
  return [[[MsgTokenInfo_Builder alloc] init] autorelease];
}
+ (MsgTokenInfo_Builder*) builderWithPrototype:(MsgTokenInfo*) prototype {
  return [[MsgTokenInfo builder] mergeFrom:prototype];
}
- (MsgTokenInfo_Builder*) builder {
  return [MsgTokenInfo builder];
}
@end

@interface MsgTokenInfo_Builder()
@property (retain) MsgTokenInfo* result;
@end

@implementation MsgTokenInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgTokenInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgTokenInfo_Builder*) clear {
  self.result = [[[MsgTokenInfo alloc] init] autorelease];
  return self;
}
- (MsgTokenInfo_Builder*) clone {
  return [MsgTokenInfo builderWithPrototype:result];
}
- (MsgTokenInfo*) defaultInstance {
  return [MsgTokenInfo defaultInstance];
}
- (MsgTokenInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgTokenInfo*) buildPartial {
  MsgTokenInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgTokenInfo_Builder*) mergeFrom:(MsgTokenInfo*) other {
  if (other == [MsgTokenInfo defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgTokenInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgTokenInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 18: {
        [self setToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int64_t) userId {
  return result.userId;
}
- (MsgTokenInfo_Builder*) setUserId:(int64_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MsgTokenInfo_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0L;
  return self;
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (MsgTokenInfo_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (MsgTokenInfo_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
@end

@interface MsgDynamicInfo ()
@property (retain) PBAppendableArray * selectedCitysArray;
@end

@implementation MsgDynamicInfo

@synthesize selectedCitysArray;
@dynamic selectedCitys;
- (void) dealloc {
  self.selectedCitysArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MsgDynamicInfo* defaultMsgDynamicInfoInstance = nil;
+ (void) initialize {
  if (self == [MsgDynamicInfo class]) {
    defaultMsgDynamicInfoInstance = [[MsgDynamicInfo alloc] init];
  }
}
+ (MsgDynamicInfo*) defaultInstance {
  return defaultMsgDynamicInfoInstance;
}
- (MsgDynamicInfo*) defaultInstance {
  return defaultMsgDynamicInfoInstance;
}
- (PBArray *)selectedCitys {
  return selectedCitysArray;
}
- (MsgSelectedCity*)selectedCitysAtIndex:(NSUInteger)index {
  return [selectedCitysArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MsgSelectedCity *element in self.selectedCitysArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MsgSelectedCity *element in self.selectedCitysArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgDynamicInfo*) parseFromData:(NSData*) data {
  return (MsgDynamicInfo*)[[[MsgDynamicInfo builder] mergeFromData:data] build];
}
+ (MsgDynamicInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDynamicInfo*)[[[MsgDynamicInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgDynamicInfo*) parseFromInputStream:(NSInputStream*) input {
  return (MsgDynamicInfo*)[[[MsgDynamicInfo builder] mergeFromInputStream:input] build];
}
+ (MsgDynamicInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDynamicInfo*)[[[MsgDynamicInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgDynamicInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgDynamicInfo*)[[[MsgDynamicInfo builder] mergeFromCodedInputStream:input] build];
}
+ (MsgDynamicInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgDynamicInfo*)[[[MsgDynamicInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgDynamicInfo_Builder*) builder {
  return [[[MsgDynamicInfo_Builder alloc] init] autorelease];
}
+ (MsgDynamicInfo_Builder*) builderWithPrototype:(MsgDynamicInfo*) prototype {
  return [[MsgDynamicInfo builder] mergeFrom:prototype];
}
- (MsgDynamicInfo_Builder*) builder {
  return [MsgDynamicInfo builder];
}
@end

@interface MsgDynamicInfo_Builder()
@property (retain) MsgDynamicInfo* result;
@end

@implementation MsgDynamicInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgDynamicInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgDynamicInfo_Builder*) clear {
  self.result = [[[MsgDynamicInfo alloc] init] autorelease];
  return self;
}
- (MsgDynamicInfo_Builder*) clone {
  return [MsgDynamicInfo builderWithPrototype:result];
}
- (MsgDynamicInfo*) defaultInstance {
  return [MsgDynamicInfo defaultInstance];
}
- (MsgDynamicInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgDynamicInfo*) buildPartial {
  MsgDynamicInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgDynamicInfo_Builder*) mergeFrom:(MsgDynamicInfo*) other {
  if (other == [MsgDynamicInfo defaultInstance]) {
    return self;
  }
  if (other.selectedCitysArray.count > 0) {
    if (result.selectedCitysArray == nil) {
      result.selectedCitysArray = [[other.selectedCitysArray copyWithZone:[other.selectedCitysArray zone]] autorelease];
    } else {
      [result.selectedCitysArray appendArray:other.selectedCitysArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgDynamicInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgDynamicInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MsgSelectedCity_Builder* subBuilder = [MsgSelectedCity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSelectedCitys:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)selectedCitys {
  return result.selectedCitysArray;
}
- (MsgSelectedCity*)selectedCitysAtIndex:(NSUInteger)index {
  return [result selectedCitysAtIndex:index];
}
- (MsgDynamicInfo_Builder *)addSelectedCitys:(MsgSelectedCity*)value {
  if (result.selectedCitysArray == nil) {
    result.selectedCitysArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.selectedCitysArray addObject:value];
  return self;
}
- (MsgDynamicInfo_Builder *)setSelectedCitysArray:(NSArray *)array {
  result.selectedCitysArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgDynamicInfo_Builder *)setSelectedCitysValues:(const MsgSelectedCity* *)values count:(NSUInteger)count {
  result.selectedCitysArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (MsgDynamicInfo_Builder *)clearSelectedCitys {
  result.selectedCitysArray = nil;
  return self;
}
@end

@interface MsgSelectedCity ()
@property (retain) NSString* city;
@property BOOL status;
@property int32_t len;
@end

@implementation MsgSelectedCity

- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) value {
  hasCity_ = !!value;
}
@synthesize city;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
- (BOOL) status {
  return !!status_;
}
- (void) setStatus:(BOOL) value {
  status_ = !!value;
}
- (BOOL) hasLen {
  return !!hasLen_;
}
- (void) setHasLen:(BOOL) value {
  hasLen_ = !!value;
}
@synthesize len;
- (void) dealloc {
  self.city = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.city = @"";
    self.status = NO;
    self.len = 0;
  }
  return self;
}
static MsgSelectedCity* defaultMsgSelectedCityInstance = nil;
+ (void) initialize {
  if (self == [MsgSelectedCity class]) {
    defaultMsgSelectedCityInstance = [[MsgSelectedCity alloc] init];
  }
}
+ (MsgSelectedCity*) defaultInstance {
  return defaultMsgSelectedCityInstance;
}
- (MsgSelectedCity*) defaultInstance {
  return defaultMsgSelectedCityInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCity) {
    [output writeString:1 value:self.city];
  }
  if (self.hasStatus) {
    [output writeBool:2 value:self.status];
  }
  if (self.hasLen) {
    [output writeInt32:3 value:self.len];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCity) {
    size += computeStringSize(1, self.city);
  }
  if (self.hasStatus) {
    size += computeBoolSize(2, self.status);
  }
  if (self.hasLen) {
    size += computeInt32Size(3, self.len);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MsgSelectedCity*) parseFromData:(NSData*) data {
  return (MsgSelectedCity*)[[[MsgSelectedCity builder] mergeFromData:data] build];
}
+ (MsgSelectedCity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSelectedCity*)[[[MsgSelectedCity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MsgSelectedCity*) parseFromInputStream:(NSInputStream*) input {
  return (MsgSelectedCity*)[[[MsgSelectedCity builder] mergeFromInputStream:input] build];
}
+ (MsgSelectedCity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSelectedCity*)[[[MsgSelectedCity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgSelectedCity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MsgSelectedCity*)[[[MsgSelectedCity builder] mergeFromCodedInputStream:input] build];
}
+ (MsgSelectedCity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MsgSelectedCity*)[[[MsgSelectedCity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MsgSelectedCity_Builder*) builder {
  return [[[MsgSelectedCity_Builder alloc] init] autorelease];
}
+ (MsgSelectedCity_Builder*) builderWithPrototype:(MsgSelectedCity*) prototype {
  return [[MsgSelectedCity builder] mergeFrom:prototype];
}
- (MsgSelectedCity_Builder*) builder {
  return [MsgSelectedCity builder];
}
@end

@interface MsgSelectedCity_Builder()
@property (retain) MsgSelectedCity* result;
@end

@implementation MsgSelectedCity_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MsgSelectedCity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MsgSelectedCity_Builder*) clear {
  self.result = [[[MsgSelectedCity alloc] init] autorelease];
  return self;
}
- (MsgSelectedCity_Builder*) clone {
  return [MsgSelectedCity builderWithPrototype:result];
}
- (MsgSelectedCity*) defaultInstance {
  return [MsgSelectedCity defaultInstance];
}
- (MsgSelectedCity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MsgSelectedCity*) buildPartial {
  MsgSelectedCity* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MsgSelectedCity_Builder*) mergeFrom:(MsgSelectedCity*) other {
  if (other == [MsgSelectedCity defaultInstance]) {
    return self;
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasLen) {
    [self setLen:other.len];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MsgSelectedCity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MsgSelectedCity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCity:[input readString]];
        break;
      }
      case 16: {
        [self setStatus:[input readBool]];
        break;
      }
      case 24: {
        [self setLen:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCity {
  return result.hasCity;
}
- (NSString*) city {
  return result.city;
}
- (MsgSelectedCity_Builder*) setCity:(NSString*) value {
  result.hasCity = YES;
  result.city = value;
  return self;
}
- (MsgSelectedCity_Builder*) clearCity {
  result.hasCity = NO;
  result.city = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BOOL) status {
  return result.status;
}
- (MsgSelectedCity_Builder*) setStatus:(BOOL) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (MsgSelectedCity_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = NO;
  return self;
}
- (BOOL) hasLen {
  return result.hasLen;
}
- (int32_t) len {
  return result.len;
}
- (MsgSelectedCity_Builder*) setLen:(int32_t) value {
  result.hasLen = YES;
  result.len = value;
  return self;
}
- (MsgSelectedCity_Builder*) clearLen {
  result.hasLen = NO;
  result.len = 0;
  return self;
}
@end

